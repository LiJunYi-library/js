{"version":3,"file":"index.esm.js","sources":["src/base/utils.js","src/base/imps/treeAttrsChangeIMP.js","src/base/imps/resizeObserverIMP.js","src/base/imps/treeObserverIMP.js","../rainbow-js/package/array/index.js","../rainbow-js/package/timer/index.js","src/base/rainbow-element.js","src/grid/index.js","src/falls/index.js","src/scroll/index.js","src/scroll-memory-bable/index.js","src/rolling-text/index.js"],"sourcesContent":["export function deleteKey(target, source, bool) {\r\n  for (const key in target) {\r\n    if (Object.prototype.hasOwnProperty.call(target, key)) {\r\n      try {\r\n        if (bool) source[key] = \"\";\r\n        delete source[key];\r\n      } catch (error) {}\r\n    }\r\n  }\r\n}\r\n\r\nexport function assignStyle(style, newStyle) {\r\n  for (const key in newStyle) {\r\n    if (Object.prototype.hasOwnProperty.call(newStyle, key)) {\r\n      style[key] = \"\";\r\n      style[key] = newStyle[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport function convertToCamelCase(str) {\r\n  if (str.includes(\"-\")) {\r\n    const parts = str.split(\"-\");\r\n    const firstPart = parts[0];\r\n    const remainingParts = parts\r\n      .slice(1)\r\n      .map((part) => part.charAt(0).toUpperCase() + part.slice(1));\r\n    return firstPart + remainingParts.join(\"\");\r\n  }\r\n  return str;\r\n}\r\n\r\nexport function camelCaseToKebabCase(str) {\r\n  return str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\r\n}\r\n\r\n// bubbles: true, cancelable: true,\r\n\r\nexport class RainbowEvent extends Event {\r\n  constructor(type, eventInitDict, event) {\r\n    super(type, eventInitDict);\r\n    this.detail = event;\r\n    if (event instanceof Array) {\r\n      for (const key in event) {\r\n        try {\r\n          if (this[key] === undefined) this[key] = event[key];\r\n        } catch (error) {\r\n          console.warn(error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function createCustomEvent(name, event, eventInitDict = {}) {\r\n  const newEvent = new CustomEvent(name, { bubbles: true, cancelable: true, ...eventInitDict });\r\n  for (const key in event) {\r\n    try {\r\n      if (newEvent[key] === undefined) newEvent[key] = event[key];\r\n    } catch (error) {\r\n      console.warn(error);\r\n    }\r\n  }\r\n  return newEvent;\r\n}\r\n\r\nexport function renderChildren(props = {}) {\r\n  const options = { parentNode: undefined, ...props };\r\n  let cacheMap = new Map();\r\n  let pointer = undefined;\r\n\r\n  function renderList(source = [], p) {\r\n    const config = {\r\n      beforeEach: () => 0,\r\n      keyExtractor: (item, index) => index,\r\n      onCacheNode: () => 0,\r\n      onCreateNode: () => 0,\r\n      ...p,\r\n    };\r\n    const map = new Map();\r\n    pointer = undefined;\r\n    config.beforeEach({ cacheMap, pointer });\r\n    source.forEach((item, index) => {\r\n      const key = config.keyExtractor(item, index);\r\n      let node;\r\n      if (cacheMap.has(key)) {\r\n        node = cacheMap.get(key);\r\n        config.onCacheNode(node, item, index, key);\r\n        if (pointer) {\r\n          if (pointer.nextSibling === node) {\r\n            //当前指针的下一个和要渲染的div相同 b不做处理\r\n          } else {\r\n            options.parentNode.insertBefore(node, pointer.nextSibling);\r\n          }\r\n        }\r\n        pointer = node;\r\n        cacheMap.delete(key);\r\n      } else {\r\n        node = config.onCreateNode(item, index, key);\r\n        if (pointer) options.parentNode.insertBefore(node, undefined);\r\n        else options.parentNode.insertBefore(node, pointer?.nextSibling);\r\n        pointer = node;\r\n      }\r\n\r\n      map.set(key, node);\r\n    });\r\n    cacheMap.forEach((node) => node.remove());\r\n    pointer = undefined;\r\n    cacheMap = map;\r\n  }\r\n\r\n  return { renderList };\r\n}\r\n","const events = new Map();\r\n\r\nnew MutationObserver((mutations) => {\r\n    events.forEach((fun, item) => {\r\n        if (fun instanceof Function) fun.call(item, mutations)\r\n    })\r\n    // console.log('document MutationObserver')\r\n}).observe(document, { subtree: true, attributes: true, attributeOldValue: true })\r\n\r\n\r\nexport const treeAttrsChangeIMP = {\r\n    simult: {\r\n        init() {\r\n            if (!this.$changePropsRender) return;\r\n            events.set(this, () => this.$changePropsRender())\r\n        },\r\n        disconnected() {\r\n            events.delete(this)\r\n        },\r\n    },\r\n    settle: {\r\n        init() { },\r\n    },\r\n    async: {\r\n        init() { },\r\n    }\r\n}\r\n\r\n","export function resizeObserverIMP(props = {}) {\r\n    let obs;\r\n    const config = {\r\n        isOnlyResizeWidth: false,\r\n        isOnlyResizeHeight: false,\r\n        resizeCallback: undefined,\r\n        resizeOptions: {},\r\n        ...props\r\n    }\r\n\r\n    let cache = {}\r\n\r\n    return {\r\n        simult: {\r\n            init() {\r\n                const cb = config.resizeCallback ? config.resizeCallback.bind(this) : this.$debouncedRender.bind(this);\r\n                try {\r\n                    obs = new ResizeObserver((...arg) => {\r\n                        let offset = { width: this.offsetWidth, height: this.offsetHeight };\r\n                        if (config.isOnlyResizeWidth && cache.width !== offset.width) cb(...arg)\r\n                        if (config.isOnlyResizeHeight && cache.height !== offset.height) cb(...arg)\r\n                        if (!config.isOnlyResizeWidth && !config.isOnlyResizeHeight) cb(...arg)\r\n                        cache = offset;\r\n                    });\r\n                    obs.observe(this, config.resizeOptions)\r\n                } catch (error) {\r\n                    console.warn(error);\r\n                }\r\n            },\r\n            disconnected() {\r\n                obs.disconnect(this)\r\n            },\r\n        },\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","export function treeObserverIMP(props = {}) {\r\n    let mObserver;\r\n    let rObserver;\r\n\r\n    const config = {\r\n        childrenResizeOptions: {},\r\n        onChildrenSizeChange() { },\r\n        resizeOptions: {},\r\n        onSizeChange() { },\r\n        onWidthChange() { },\r\n        onHeightChange() { },\r\n\r\n\r\n\r\n        mutationOptions: { childList: true },\r\n        onChildChange() { },\r\n        onAttributeChange() { },\r\n        ...props\r\n    }\r\n\r\n    let cache = {\r\n        offset: {},\r\n    }\r\n\r\n    return {\r\n        simult: {\r\n            init() {\r\n                try {\r\n                    rObserver = new ResizeObserver((entries, ...arg) => {\r\n                        let offset = { width: this.offsetWidth, height: this.offsetHeight };\r\n                        if (cache.offset.width !== offset.width) config.onWidthChange.call(this, entries, offset);\r\n                        if (cache.offset.height !== offset.height) config.onHeightChange.call(this, entries, offset);\r\n                        if (cache.offset.width !== offset.width || cache.offset.height !== offset.height) {\r\n                            config.onSizeChange.call(this, entries, offset);\r\n                        }\r\n                        cache.offset = offset;\r\n                        let includes = entries.some((el) => el.target === this)\r\n                        if (includes === false) config.onChildrenSizeChange.call(this, entries);\r\n                    });\r\n                    rObserver?.observe?.(this, config.resizeOptions)\r\n                } catch (error) {\r\n                    console.warn(error);\r\n                }\r\n                mObserver = new MutationObserver((mutations, ...arg) => {\r\n                    for (let mutation of mutations) {\r\n                        if (mutation.type === \"childList\") {\r\n                            const addedNodes = Array.from(mutation.addedNodes).filter(el => el.style);\r\n                            const removedNodes = Array.from(mutation.removedNodes).filter(el => el.style);\r\n                            addedNodes.forEach(ele => rObserver.observe(ele, config.childrenResizeOptions));\r\n                            removedNodes.forEach(ele => rObserver.unobserve(ele));\r\n                            config.onChildChange.call(this, mutation);\r\n                        } else if (mutation.type === \"attributes\") {\r\n                            config.onAttributeChange.call(this, mutation);\r\n                        }\r\n                    }\r\n                })\r\n                mObserver.observe(this, config.mutationOptions)\r\n            },\r\n            disconnected() {\r\n                mObserver.disconnect(this)\r\n                rObserver.disconnect(this)\r\n            },\r\n        },\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","const testArr = [\n  // { num: 33, tt: \"奇\" },\n  // { num: 44, tt: \"偶\" },\n  // { num: 11, tt: \"奇***\" },\n  // { num: 99, tt: \"奇***\" },\n  // { num: 22, tt: \"偶\" },\n  // { num: 77, tt: \"奇\" },\n  // { num: 88, tt: \"偶\" },\n  // { num: 99, tt: \"奇----\" },\n  // { num: 55, tt: \"奇\" },\n  // { num: 11, tt: \"奇----\" },\n  // { num: 66, tt: \"偶\" },\n\n  { num: 11, tt: \"奇\" },\n  { num: 22, tt: \"偶\" },\n  { num: 33, tt: \"奇***\" },\n  { num: 44, tt: \"偶***\" },\n  { num: 55, tt: \"奇\" },\n  { num: 66, tt: \"偶\" },\n  { num: 77, tt: \"奇\" },\n  { num: 88, tt: \"偶----\" },\n  { num: 99, tt: \"奇\" },\n];\n\nexport * from \"./sql.js\";\n\nif (!Array.prototype.at) {\n  Array.prototype.at = function (...arg) {\n    return arrayAt(this, ...arg);\n  };\n}\n\nexport function arrayAt(list, index) {\n  let nth = index < 0 ? list.length + index : index;\n  return list[nth];\n}\n\n//循环\nexport function arrayLoop(num, cb) {\n  for (let index = 0; index < num; index++) {\n    if (cb(index) === false) return;\n  }\n}\n//循环创建\nexport function arrayLoopMap(num, cb) {\n  const arr = [];\n  for (let index = 0; index < num; index++) {\n    arr.push(cb(index));\n  }\n  return arr;\n}\n//冒泡查找\nexport function arrayBubble(list = [], formatter, verdict) {\n  let value = null;\n  let index;\n  let item;\n  list.forEach((ele, nth) => {\n    if (value === null) {\n      item = ele;\n      index = nth;\n      value = formatter(ele, nth, list);\n      return;\n    }\n\n    if (verdict(value, ele, nth, list)) {\n      item = ele;\n      index = nth;\n      value = formatter(ele, nth, list);\n    }\n  });\n  return item;\n}\n//冒泡查找最小\nexport function arrayBubbleMin(list = [], formatter) {\n  return arrayBubble(\n    list,\n    formatter,\n    (value, item, index, list) => formatter(item, index, list) < value\n  );\n}\n//冒泡倒数查找最小\nexport function arrayBubbleLastMin(list = [], formatter) {\n  return arrayBubble(\n    list,\n    formatter,\n    (value, item, index, list) => formatter(item, index, list) <= value\n  );\n}\n//冒泡查找最大\nexport function arrayBubbleMax(list = [], formatter) {\n  return arrayBubble(\n    list,\n    formatter,\n    (value, item, index, list) => formatter(item, index, list) > value\n  );\n}\n//冒泡倒数查找最大\nexport function arrayBubbleLastMax(list = [], formatter) {\n  return arrayBubble(\n    list,\n    formatter,\n    (value, item, index, list) => formatter(item, index, list) >= value\n  );\n}\n// 删除数组中的第n个 改变数组\nexport function arrayRemoveIndex(list = [], num) {\n  list.splice(num, 1);\n  return list;\n}\n// 删除数组中第一个找到的item 不改变数组\nexport function arrayRemove(list = [], item) {\n  const index = list.findIndex((el) => el === item);\n  if (~index) list.splice(index, 1);\n  return list;\n}\n// 删除数组中最后一个找到的item  不改变数组\nexport function arrayRemoveLast(list = [], item) {\n  const index = list.findLastIndex((el) => el === item);\n  if (~index) list.splice(index, 1);\n  return list;\n}\n// 删除数组中的所有 相同的 item 改变数组\nexport function arrayRemoves(list = [], item) {\n  const sames = list.filter((el) => el === item);\n  sames.forEach((el) => {\n    arrayRemove(list, el);\n  });\n  return list;\n}\n// 切割数组的index\nexport function arraySplitIndex(list = [], num) {\n  const arr = [];\n  for (let index = 0; index < list.length; index += num) {\n    const ar = [];\n    const max = index + num > list.length ? list.length : index + num;\n    for (let j = index; j < max; j++) {\n      ar.push(j);\n    }\n    arr.push(ar);\n  }\n  return arr;\n}\n// 切割数组\nexport function arraySplit(list = [], num) {\n  const arr = [];\n  for (let index = 0; index < list.length; index += num) {\n    const max = index + num > list.length ? list.length : index + num;\n    const ar = list.slice(index, max);\n    arr.push(ar);\n  }\n  return arr;\n}\n// 数组 根据某个属性 去重\nexport function arrayWipeRepetition(list = [], formatter) {\n  if (!formatter) return [...new Set(list)];\n  const map = new Map();\n  return list.filter(\n    (item, index) =>\n      !map.has(formatter(item, index).toString()) &&\n      map.set(formatter(item, index).toString())\n  );\n}\n// 数组 根据某个属性 去重 从后面\nexport function arrayWipeRepetitionLast(list = [], formatter) {\n  if (!formatter) return [...new Set(list)];\n  const map = {};\n  list.forEach((item, index) => (map[formatter(item, index)] = item));\n  const arr = [];\n  for (const key in map) {\n    if (Object.hasOwnProperty.call(map, key)) {\n      const element = map[key];\n      arr.push(element);\n    }\n  }\n  return arr;\n}\n// 数组提取相同\nexport function arrayExtractSame(list = [], formatter) {\n  const map = {};\n  list.forEach((item) => {\n    if (!map[formatter(item)]) map[formatter(item)] = [];\n    map[formatter(item)].push(item);\n  });\n  const arr = [];\n  for (const key in map) {\n    if (Object.hasOwnProperty.call(map, key)) {\n      const element = map[key];\n      if (element.length > 1) arr.push(element);\n    }\n  }\n  return arr.flat();\n}\n\n// 数组排序 根据属性正序\nexport function arraySort(list = [], formatter, formatter2) {\n  let fmt = formatter2 || formatter\n  list.sort((a, b) => formatter(a) - fmt(b))\n  return list;\n}\n\nexport function arraySortMin(...arg) {\n  return arraySort(...arg)[0]\n}\n\nexport function arraySortMax(list = [], ...arg) {\n  return arraySort(list, ...arg)[list.length - 1]\n}\n\n// 数组排序  根据属性倒序\nexport function arrayReverseSort(list = [], formatter, formatter2) {\n  let fmt = formatter2 || formatter\n  list.sort((a, b) => fmt(b) - formatter(a))\n  return list;\n}\n\nexport function arrayReverseSortMin(...arg) {\n  return arrayReverseSort(...arg)[list.length - 1]\n}\n\nexport function arrayReverseSortMax(list = [], ...arg) {\n  return arrayReverseSort(list, ...arg)[0]\n}\n\n/**\n * 数组排序 根据另一个数组的属性\n * @param {*} list\n * @param {*} arr\n * @param {*} formatter\n * @returns\n */\nexport function arraySortByList(list, arr, formatter) {\n  list.forEach((item) => {\n    const sortIndex = arr.findIndex((ele) => formatter(item, ele));\n    item.sortIndex = sortIndex === -1 ? list.length : sortIndex;\n  });\n  list.sort(function (a, b) {\n    return a.sortIndex - b.sortIndex;\n  });\n  return list;\n}\n// 数组打乱\nexport function arrayRandom(list) {\n  const length = list.length;\n  for (let nth = 0; nth < length; nth++) {\n    const index = Math.floor(Math.random() * (list.length - 1));\n    list.push(list[index]);\n    list.splice(index, 1);\n  }\n}\n// 触发数组方法\nexport function arrayInvokeFuns(...args) {\n  const [list, formatter, ...arg] = args;\n  let funArgs = [formatter, ...arg];\n  let fmt = (item) => item;\n  if (formatter instanceof Function) {\n    fmt = formatter;\n    funArgs = [...arg];\n  }\n  list.forEach((item) => {\n    const fun = fmt(item);\n    fun(...funArgs);\n  });\n}\n/* 事件派发 */\nexport function arrayEvents() {\n  const events = [];\n\n  function push(eventCB) {\n    events.push(eventCB);\n  }\n\n  function remove(eventCB) {\n    arrayRemove(events, eventCB);\n  }\n\n  function invoke(...args) {\n    arrayInvokeFuns(events, ...args);\n  }\n\n  function invokes(fun) {\n    events.forEach(fun);\n  }\n\n  return { events, push, remove, invoke, invokes };\n}\n\n/* 二分查找 */\nexport function arrayBinarySearch(setPointer = (args, index) => (args.right = index - 1), arr = [], formatter, compare) {\n  const fg = {\n    left: 0,\n    right: arr.length - 1,\n    result: -1,\n  }\n  while (fg.left <= fg.right) {\n    const index = Math.floor((fg.left + fg.right) / 2);\n    const item = arr[index]\n    if (formatter(item)) {\n      fg.result = index;\n      setPointer(fg, index, item)\n    } else if (compare(item)) {\n      fg.left = index + 1;\n    } else {\n      fg.right = index - 1;\n    }\n  }\n  return fg.result;\n}\n/* 二分查找到符合条件的第一个元素的下标 没有找到返回-1 compare<*/\nexport function arrayBinaryFindIndex(arr = [], formatter, compare) {\n  return arrayBinarySearch((args, index) => {\n    args.right = index - 1\n  }, arr, formatter, compare);\n}\n/* 二分查找到符合条件的第一个元素 没有找到返回undefined compare<*/\nexport function arrayBinaryFind(arr = [], formatter, compare) {\n  const index = arrayBinaryFindIndex(arr, formatter, compare);\n  return index === -1 ? undefined : arr[index]\n}\n/* 二分查找到符合条件的最后一个元素的下标 没有找到返回-1 compare<*/\nexport function arrayBinaryFindLastIndex(arr = [], formatter, compare) {\n  return arrayBinarySearch((args, index) => {\n    args.left = index + 1;\n  }, arr, formatter, compare);\n}\n/* 二分查找到符合条件的最后一个元素 没有找到返回undefined compare<*/\nexport function arrayBinaryFindLast(arr = [], formatter, compare) {\n  const index = arrayBinaryFindLastIndex(arr, formatter, compare);\n  return index === -1 ? undefined : arr[index]\n}\n\n\n\n","/**\n * 创建一个防抖函数\n * @param {Function} callback - 要执行的回调函数\n * @param {number} delay - 延迟时间，默认为500毫秒\n * @returns {Function} - 返回一个防抖函数\n */\nexport function timerDebounced(callback, delay = 500) {\n  let timeout;\n  return function fun(...arg) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      callback(...arg);\n    }, delay);\n  };\n}\n\nexport function animationDebounced(callback) {\n  let id;\n  return function fun(...arg) {\n    cancelAnimationFrame(id);\n    id = requestAnimationFrame((time) => {\n      callback(...arg);\n    });\n  };\n}\n\n/**\n * 定时器节流函数\n * @param {Function} callback - 需要节流的回调函数\n * @param {number} delay - 节流的时间间隔，默认为500毫秒\n * @returns {Function} - 节流后的回调函数\n */\nexport function timerThrottle(callback, delay = 500) {\n  let isThrottled = false;\n  return function throttledCallback(...args) {\n    if (isThrottled) return;\n    isThrottled = true;\n    callback(...args);\n    setTimeout(() => {\n      isThrottled = false;\n    }, delay);\n  };\n}\n/***\n *\n */\nexport function timeRefush(props = {}) {\n  const config = {\n    formatterTime: (date) => date.getDate(),\n    onChange: () => undefined,\n    once: false,\n    ms: 1000,\n    ...props,\n  };\n  let prveTime = config.formatterTime(new Date());\n  const timer = setInterval(() => {\n    const date = new Date();\n    const time = config.formatterTime(date);\n    if (prveTime !== time) {\n      config.onChange(time);\n      if (config.once) clearInterval(timer);\n    }\n    prveTime = time;\n  }, config.ms);\n}\n","import { camelCaseToKebabCase, assignStyle, convertToCamelCase, RainbowEvent } from \"./utils\";\r\nimport { treeAttrsChangeIMP } from \"../base/imps/index.js\";\r\nimport { animationDebounced } from \"@rainbow_ljy/rainbow-js\";\r\n\r\nexport class RainbowElement extends HTMLElement {\r\n  static $registerProps(types) {\r\n    const keys = [];\r\n    const props = {};\r\n    for (const key in types) {\r\n      if (Object.prototype.hasOwnProperty.call(types, key)) {\r\n        keys.push(key);\r\n        if (types[key]?.default instanceof Function) props[key] = types[key].default(props);\r\n        else props[key] = types[key]?.default;\r\n      }\r\n    }\r\n    this.prototype.$types = types;\r\n    this.prototype.$props = props;\r\n    return keys;\r\n  }\r\n\r\n  IMPS = [treeAttrsChangeIMP];\r\n\r\n  $ = {\r\n    isInitAttrs: false,\r\n    data: {},\r\n    DATA: new Proxy({}, { get: (target, prop) => this.$.data[camelCaseToKebabCase(prop)] }),\r\n    props: { ...this.constructor.prototype.$props },\r\n    resolveFunCss: {\r\n      calc: (v, ...arg) => {\r\n        return v;\r\n      },\r\n    },\r\n    resolveCss: (key, str = \"\") => {\r\n      try {\r\n        const isAttrFun = /r-attr\\([^\\)]*?\\)/.test(str);\r\n        if (isAttrFun) str = this.$.props[key];\r\n\r\n        let cssVal = str.replace(/\\d+px|\\d+vw|\\d+vh/g, (len) => {\r\n          if (/\\d+px/.test(len)) return Number(len.replaceAll(\"px\", \"\"));\r\n          if (/\\d+vw/.test(len))\r\n            return (Number(len.replaceAll(\"vw\", \"\")) / 100) * window.innerWidth;\r\n          if (/\\d+vh/.test(len))\r\n            return (Number(len.replaceAll(\"vh\", \"\")) / 100) * window.innerHeight;\r\n          return len;\r\n        });\r\n\r\n        const isFunstr = /([^\\(]*?)\\([^\\)]*?\\)/.test(cssVal);\r\n        if (isFunstr) return eval(`this.$.resolveFunCss.${cssVal}`);\r\n\r\n        let number = Number(cssVal);\r\n        if (!isNaN(number)) return number;\r\n\r\n        // console.log(key, cssVal, isFunstr);\r\n        return cssVal;\r\n      } catch (error) {\r\n        console.log(error);\r\n\r\n        return str;\r\n      }\r\n    },\r\n    cache: {\r\n      data: {},\r\n      style: {},\r\n      class: new Map(),\r\n    },\r\n    setStyle: (fmtStyle = () => ({})) => {\r\n      let ftStyle = fmtStyle(this.$.data) || {};\r\n      let newStyle = ftStyle;\r\n      if (ftStyle instanceof Array) {\r\n        newStyle = ftStyle.filter(Boolean).reduce((add, value) => {\r\n          Object.assign(add, value);\r\n          return add;\r\n        }, {});\r\n      }\r\n      for (const key in newStyle) {\r\n        if (Object.prototype.hasOwnProperty.call(newStyle, key)) {\r\n          if (this.$.cache.style[key] !== newStyle[key]) {\r\n            this.style[key] = \"\";\r\n            this.style[key] = newStyle[key];\r\n          }\r\n          delete this.$.cache.style[key];\r\n        }\r\n      }\r\n      for (const key in this.$.cache.style) {\r\n        if (Object.prototype.hasOwnProperty.call(this.$.cache.style, key)) {\r\n          this.style[key] = \"\";\r\n        }\r\n      }\r\n      this.$.cache.style = newStyle;\r\n    },\r\n    setClass: (fmtClass = () => []) => {\r\n      let newClass = fmtClass(this.$.data);\r\n      if (newClass?.length === undefined) newClass = [newClass];\r\n      newClass = newClass.filter(Boolean);\r\n      let newMap = new Map();\r\n      newClass.forEach((key) => {\r\n        newMap.set(key, key);\r\n        this.$.cache.class.delete(key);\r\n        this.classList.add(key);\r\n      });\r\n      this.$.cache.class.forEach((key, v) => {\r\n        this.classList.remove(key);\r\n      });\r\n      this.$.cache.class = newMap;\r\n    },\r\n    findParentByType: (name, p = this) => {\r\n      if (!p) return;\r\n      const parent = p.parentNode;\r\n      if (!parent) return;\r\n      const tName = parent.constructor.name;\r\n      if (tName === name || parent.$elementName === name) return parent;\r\n      return this.$.findParentByType(name, parent);\r\n    },\r\n    getOffsetTop: (p, num = 0) => {\r\n      let offsetTop = this.offsetTop;\r\n      let top = num + offsetTop;\r\n      if (this.offsetParent === p) return top;\r\n      return this.$.getOffsetTop(this.offsetParent, top);\r\n    },\r\n  };\r\n\r\n  constructor(...arg) {\r\n    super(...arg);\r\n    this.IMPS.push(...(this.$onRegisterIMPS?.() || []));\r\n    this.$debouncedRender = animationDebounced((...pop) => this.$render(...pop));\r\n    this.IMPS.map((el) => el?.simult)?.forEach((el) => el?.init?.call?.(this));\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    this.$.props[name] = newValue;\r\n    if (this.$.isInitAttrs === true) this.$onAttributeChanged(name, oldValue, newValue);\r\n  }\r\n\r\n  $onAttributeChanged() {\r\n    this.IMPS.map((el) => el?.simult)?.forEach((el) => el?.changeAttr?.call?.(this));\r\n    this.$changePropsRender();\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.$.isInitAttrs = true;\r\n    this.IMPS.map((el) => el?.simult)?.forEach((el) => el?.connected?.call?.(this));\r\n    this.$changePropsRender();\r\n  }\r\n\r\n  adoptedCallback() {\r\n    this.IMPS.map((el) => el?.simult)?.forEach((el) => el?.adopted?.call?.(this));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.IMPS.map((el) => el?.simult)?.forEach((el) => el?.disconnected?.call?.(this));\r\n  }\r\n\r\n  $changePropsRender(force) {\r\n    let isChange = false;\r\n    const css = {};\r\n    const style = window.getComputedStyle(this);\r\n    for (const key in this.$.props) {\r\n      if (Object.prototype.hasOwnProperty.call(this.$.props, key)) {\r\n        const cssVal = style.getPropertyValue(\"--\" + key).trim();\r\n        css[key] = this.$.resolveCss(key, cssVal);\r\n        if (this.$.cache.data[key] !== css[key]) isChange = true;\r\n      }\r\n    }\r\n    this.$.data = css;\r\n    this.$.cache.data = css;\r\n    // console.log(isChange);\r\n    if (isChange || force === true) this.$debouncedRender(css);\r\n    return css;\r\n  }\r\n\r\n  $onRegisterIMPS() {\r\n    return [];\r\n  }\r\n\r\n  $render() {}\r\n}\r\n","import { RainbowElement } from \"../base/index.js\";\r\nimport { resizeObserverIMP } from \"../base/imps/index.js\";\r\nimport \"./index.css\";\r\n\r\nexport class RGrid extends RainbowElement {\r\n  static observedAttributes = this.$registerProps({\r\n    \"r-columns\": { type: Number, default: 1 },\r\n    \"r-min-auto-width\": Number,\r\n    \"r-gap\": [Number, String],\r\n    \"r-row-gap\": [Number, String],\r\n    \"r-column-gap\": [Number, String],\r\n    \"r-grid-wrap\": String,\r\n    \"r-grid-stretch\": String,\r\n  });\r\n\r\n  $onRegisterIMPS() {\r\n    return [resizeObserverIMP({ isOnlyResizeWidth: true })];\r\n  }\r\n\r\n  $render() {\r\n    // console.log([this], this.$.data);\r\n    const { rGap, rRowGap, rColumnGap } = this.$.DATA;\r\n    this.$.setStyle(() => [\r\n      {\r\n        \"grid-template-columns\": `repeat(${this.$$columns}, 1fr)`,\r\n        \"grid-gap\": rGap + \"px\",\r\n        \"row-gap\": (rRowGap || rGap) + \"px\",\r\n        \"column-gap\": (rColumnGap || rGap) + \"px\",\r\n      },\r\n    ]);\r\n    this.$$doLayout();\r\n  }\r\n\r\n  get $$columns() {\r\n    let { rColumns, rMinAutoWidth } = this.$.DATA;\r\n    if (rMinAutoWidth) return Math.floor(this.offsetWidth / rMinAutoWidth);\r\n    return rColumns;\r\n  }\r\n\r\n  $$doLayout() {\r\n    const { rGridWrap, rGridStretch } = this.$.DATA;\r\n    let children = Array.from(this.children);\r\n    let clumnList = children.map((el) => el.getAttribute(\"grid-column\") * 1 || 1);\r\n    let start = 1;\r\n    let gridColumns = [];\r\n    let maxColumn = this.$$columns + 1;\r\n    clumnList.forEach((num, index) => {\r\n      let end = start + num;\r\n      if (rGridWrap === \"wrap\") {\r\n        if (end > maxColumn) {\r\n          if (rGridStretch === \"stretch\") {\r\n            if (gridColumns[index - 1]) gridColumns[index - 1].end = maxColumn;\r\n          }\r\n          start = 1;\r\n          let end2 = start + num;\r\n          end = end2 > maxColumn ? maxColumn : end2;\r\n        }\r\n      } else {\r\n        if (end > maxColumn) end = maxColumn;\r\n      }\r\n      gridColumns.push({\r\n        start: start,\r\n        end: end,\r\n        index,\r\n      });\r\n      start = start + num;\r\n      if (start > this.$$columns) start = 1;\r\n    });\r\n    children.forEach((el, index) => {\r\n      el.classList.add(\"r-grid-item\");\r\n      el.style[\"grid-column-start\"] = gridColumns[index].start;\r\n      el.style[\"grid-column-end\"] = gridColumns[index].end;\r\n    });\r\n  }\r\n}\r\n\r\ncustomElements.define(\"r-grid\", RGrid);\r\n","import { RainbowElement } from \"../base/index.js\";\r\nimport { arrayLoopMap } from \"@rainbow_ljy/rainbow-js\";\r\nimport { treeObserverIMP } from \"../base/imps/index.js\";\r\nimport \"./index.css\";\r\n\r\nexport class RFalls extends RainbowElement {\r\n  static observedAttributes = this.$registerProps({\r\n    \"r-min-auto-width\": Number,\r\n    \"r-columns\": { type: Number, default: 2 },\r\n    \"r-gap\": { type: Number, default: 0 },\r\n    \"r-row-gap\": { type: Number, default: 0 },\r\n    \"r-column-gap\": { type: Number, default: 0 },\r\n  });\r\n\r\n  $onRegisterIMPS() {\r\n    return [\r\n      treeObserverIMP({\r\n        onWidthChange() {\r\n          this.$debouncedRender(this.$?.data);\r\n        },\r\n        onChildrenSizeChange() {\r\n          this.$debouncedRender(this.$?.data);\r\n        },\r\n      }),\r\n    ];\r\n  }\r\n\r\n  $render() {\r\n    let { rMinAutoWidth, rColumns, rGap, rRowGap, rColumnGap } = this.$.DATA;\r\n    // console.log(rMinAutoWidth, rColumns, rGap, rRowGap, rColumnGap);\r\n    const col = (() => {\r\n      if (rMinAutoWidth) return Math.floor(this.offsetWidth / rMinAutoWidth);\r\n      return rColumns;\r\n    })();\r\n    // console.log(col);\r\n    let colGap = rColumnGap || rGap;\r\n    let rowGap = rRowGap || rGap;\r\n    let left = (i) =>\r\n      `calc( ${(100 / col) * i}% - ${(((col - 1) * colGap) / col) * i}px + ${i * colGap}px )`;\r\n    const list = arrayLoopMap(col, (i) => ({ height: 0, left: left(i), top: 0, index: i }));\r\n    // console.log(list);\r\n    let itemWidth = `calc( ${100 / col}% - ${((col - 1) * colGap) / col}px )`;\r\n    // console.log(itemWidth);\r\n    Array.from(this.children).forEach((child) => {\r\n      child.classList.add(\"r-falls-item\");\r\n      child.style.width = itemWidth;\r\n      let node = getMinHeightItem(list);\r\n      if (node.height) node.height = node.height + rowGap;\r\n      child.style.left = node.left;\r\n      child.style.top = node.height + \"px\";\r\n      node.height = node.height + child.offsetHeight;\r\n    });\r\n    this.style.height = getMaxHeightItem(list).height + \"px\";\r\n  }\r\n}\r\n\r\nfunction getMinHeightItem(list) {\r\n  let item = list[0];\r\n  list.forEach((el) => {\r\n    if (el.height < item.height) item = el;\r\n  });\r\n  return item;\r\n}\r\n\r\nfunction getMaxHeightItem(list) {\r\n  let item = list[0];\r\n  list.forEach((el) => {\r\n    if (el.height > item.height) item = el;\r\n  });\r\n  return item;\r\n}\r\ncustomElements.define(\"r-falls\", RFalls);\r\n","import './index.css';\r\nimport { RainbowElement, createCustomEvent } from '../base/index.js'\r\n\r\nexport class RScroll extends RainbowElement {\r\n    $elementName = 'RScroll'\r\n\r\n    $$scrollEl;\r\n    $$prveScrollTop;\r\n\r\n    get scrollTop() {\r\n        return this.$$scrollEl.scrollTop;\r\n    }\r\n\r\n    set scrollTop(v) {\r\n        this.$$scrollEl.scrollTop = v;\r\n    }\r\n\r\n    scrollBy(...arg) {\r\n        this.$$scrollEl.scrollBy(...arg)\r\n    }\r\n\r\n    scrollTo(...arg) {\r\n        this.$$scrollEl.scrollTo(...arg)\r\n    }\r\n\r\n    constructor(...arg) {\r\n        super(...arg);\r\n        this.attachShadow({ mode: 'open' });\r\n\r\n        this.$$scrollEl = document.createElement('div');\r\n        this.$$scrollEl.className = 'r-scroll-element';\r\n        this.$$scrollEl.setAttribute('part', 'r-scroll-element  sdt');\r\n\r\n        const content = document.createElement('div');\r\n        content.className = 'r-scroll-content';\r\n        content.setAttribute('part', 'r-scroll-content  sdt');\r\n\r\n        const topSlot = document.createElement('slot');\r\n        topSlot.setAttribute('name', 'top');\r\n        topSlot.className = 'top';\r\n        const contentSlot = document.createElement('slot');\r\n        contentSlot.className = 'content';\r\n        const bottomSlot = document.createElement('slot');\r\n        bottomSlot.setAttribute('name', 'bottom');\r\n        bottomSlot.className = 'bottom';\r\n\r\n        content.appendChild(contentSlot);\r\n        this.$$scrollEl.appendChild(topSlot);\r\n        this.$$scrollEl.appendChild(content);\r\n        this.$$scrollEl.appendChild(bottomSlot);\r\n        this.shadowRoot.appendChild(this.$$scrollEl);\r\n\r\n        this.$$scrollEl.addEventListener('scroll', this.$$onScroll.bind(this));\r\n    }\r\n\r\n    $$onScroll(event) {\r\n        const sEl = this.$$scrollEl;\r\n        event.scrollTop = sEl.scrollTop;\r\n        event.moveY = this.$$prveScrollTop - sEl.scrollTop;\r\n        if (event.moveY < 0) this.dispatchEvent(createCustomEvent('scrollUp', event));\r\n        if (this.onscroll) this.onscroll(event)\r\n        this.dispatchEvent(createCustomEvent('scroll', event))\r\n        if (event.moveY > 0) this.dispatchEvent(createCustomEvent('scrollDown', event));\r\n        this.$$prveScrollTop = sEl.scrollTop;\r\n    }\r\n\r\n    connectedCallback(...arg) {\r\n        super.connectedCallback(...arg)\r\n        this.$$prveScrollTop = this.$$scrollEl.scrollTop;\r\n    }\r\n\r\n    disconnectedCallback(...arg) {\r\n        super.connectedCallback(...arg)\r\n        this.$$scrollEl.removeEventListener('scroll', this.$$onScroll.bind(this));\r\n    }\r\n\r\n}\r\n\r\ncustomElements.define('r-scroll', RScroll);","import './index.css';\r\nimport { RainbowElement } from '../base/index.js'\r\n\r\nexport class RScrollMemoryBubble extends RainbowElement {\r\n    static observedAttributes = this.$registerProps({\r\n        'r-orientation': { type: String, default: \"right\" },  // \"left\" \"right\" \"top\" \"bottom\" \r\n        'r-init-visibility': { type: String, default: 'visible' }, // 'hidden' 'visible'\r\n        'r-visible-distance': { type: String, default: '100px' }, // px\r\n        'r-visible-reversal': String // 'noReversal' 'reversal'\r\n    });\r\n\r\n    $$visible = true;\r\n    $$cacheMoveY = 0;\r\n    $$scrollParent;\r\n\r\n    connectedCallback(...arg) {\r\n        super.connectedCallback(...arg);\r\n        this.$$visible = this.$.DATA.rInitVisibility === 'visible'\r\n        this.$$scrollParent = this.$.findParentByType('RScroll');\r\n\r\n        this.$$scrollParent.addEventListener('scrollUp', this.$$setVisibleFalse.bind(this))\r\n        this.$$scrollParent.addEventListener('scrollDown', this.$$setVisibleTrue.bind(this))\r\n    }\r\n\r\n    disconnectedCallback(...arg) {\r\n        super.connectedCallback(...arg);\r\n\r\n        this.$$scrollParent.removeEventListener('scrollUp', this.$$setVisibleFalse.bind(this));\r\n        this.$$scrollParent.removeEventListener('scrollDown', this.$$setVisibleTrue.bind(this));\r\n    }\r\n\r\n    $$setClass() {\r\n        const { rOrientation } = this.$.DATA\r\n        this.$.setClass(() => ([\r\n            \"r-scroll-memory-bubble-\" + rOrientation,\r\n            this.$$visible ? `r-scroll-memory-bubble-visible` : `r-scroll-memory-bubble-hide`,\r\n            this.$$visible ? `r-scroll-memory-bubble-visible-${rOrientation}` : `r-scroll-memory-bubble-hide-${rOrientation}`,\r\n        ]))\r\n    }\r\n\r\n    $$setVisibleTrue(event) {\r\n        if (this.$$visible === true) return this.$$cacheMoveY = 0;\r\n        this.$$cacheMoveY = this.$$cacheMoveY + Math.abs(event.moveY);\r\n        if (this.$$cacheMoveY >= this.$.DATA.rVisibleDistance) {\r\n            this.$$cacheMoveY = 0;\r\n            this.$$visible = true;\r\n            this.$$setClass();\r\n        }\r\n    }\r\n\r\n    $$setVisibleFalse(event) {\r\n        if (this.$$visible === false) return this.$$cacheMoveY = 0;\r\n        this.$$cacheMoveY = this.$$cacheMoveY + Math.abs(event.moveY);\r\n        if (this.$$cacheMoveY >= this.$.DATA.rVisibleDistance) {\r\n            this.$$cacheMoveY = 0;\r\n            this.$$visible = false;\r\n            this.$$setClass();\r\n        }\r\n    }\r\n\r\n    $render() {\r\n        this.$$setClass();\r\n    }\r\n}\r\n\r\ncustomElements.define('r-scroll-memory-bable', RScrollMemoryBubble);","import \"./index.css\";\r\nimport { RainbowElement, renderChildren } from \"../base/index.js\";\r\nimport { arrayLoop, arrayLoopMap } from \"@rainbow_ljy/rainbow-js\";\r\n\r\nexport class RRollingTextNum extends RainbowElement {\r\n  static observedAttributes = this.$registerProps({\r\n    \"r-initial-animation\": String, // true false\r\n    \"r-transition\": String,\r\n  });\r\n\r\n  $$container = document.createElement(\"span\");\r\n  $$measure = document.createElement(\"span\");\r\n  $$rotes = arrayLoopMap(10, () => document.createElement(\"span\"));\r\n  $$num = 10;\r\n  $$value = 0;\r\n  $$isMonted = false;\r\n\r\n  get $$deg() {\r\n    return 360 / this.$$num;\r\n  }\r\n\r\n  get value() {\r\n    return this.$$value;\r\n  }\r\n\r\n  set value(v) {\r\n    this.$$value = v;\r\n    if (this.$$isMonted === false) return;\r\n    this.$$rotateX(true);\r\n  }\r\n\r\n  setValue(v, ani = true) {\r\n    this.$$value = v;\r\n    if (this.$$isMonted === false) return;\r\n    this.$$rotateX(ani);\r\n  }\r\n\r\n  constructor(...arg) {\r\n    super(...arg);\r\n    this.attachShadow({ mode: \"open\" });\r\n    this.$$container.className = \"r-rolling-num-container r-rolling-num-container-ani\";\r\n    this.$$container.setAttribute(\"part\", \"r-rolling-num-container r-rolling-num-container-ani \");\r\n    this.$$measure.className = \"r-rolling-num-measure\";\r\n    this.$$measure.setAttribute(\"part\", \"r-rolling-num-measure\");\r\n    this.$$measure.innerText = \"9\";\r\n    this.$$container.appendChild(this.$$measure);\r\n    this.shadowRoot.appendChild(this.$$container);\r\n  }\r\n\r\n  $$renderNums() {\r\n    const deg = this.$$deg;\r\n    const sin = Math.sin((Math.PI / 180) * deg);\r\n    const translateZ = (sin + 0.9) * (this.$$measure.offsetHeight || 1);\r\n\r\n    this.$$rotes.forEach((div, index) => {\r\n      div.style.transform = `rotateX(${deg * index}deg)  translateZ(${translateZ}px)`;\r\n      div.setAttribute(\"part\", \"r-rolling-num-rotate\");\r\n      div.className = \"r-rolling-num-rotate\";\r\n      div.innerText = index;\r\n      this.$$container.appendChild(div);\r\n    });\r\n  }\r\n\r\n  async $$rotateX(isTransition) {\r\n    const { rTransition, rInitialAnimation } = this.$.DATA;\r\n    const rotateX = -((this.$$value / this.$$num) * 360);\r\n    let unactIndex = -Math.round(((rotateX-180) % 360) / 36);\r\n\r\n    this.$$rotes.forEach((div, index) => {\r\n      let prveIndex = unactIndex - 1 < 0 ? 9 : unactIndex - 1;\r\n      let nextIndex = unactIndex + 1 > 9 ? 0 : unactIndex + 1;\r\n      let className = \"r-rolling-num-rotate\";\r\n      if (unactIndex === index) className = \"r-rolling-num-rotate r-rolling-num-rotate-unact\";\r\n      if (prveIndex === index) className = \"r-rolling-num-rotate r-rolling-num-rotate-unprve\";\r\n      if (nextIndex === index) className = \"r-rolling-num-rotate r-rolling-num-rotate-unnext\";\r\n\r\n      div.setAttribute(\"part\", className);\r\n      div.className = className;\r\n    });\r\n\r\n    if (isTransition) {\r\n      this.$$container.style.transition = \"\";\r\n      this.$$container.style.transition = rTransition;\r\n    }\r\n    // if (this.$$isMonted === false && rInitialAnimation === \"true\") {\r\n    //   await new Promise((resolve) => requestAnimationFrame(() => resolve(true)));\r\n    // }\r\n    this.$$container.style.transform = \"\";\r\n    this.$$container.style.transform = `rotateX(${rotateX}deg)`;\r\n  }\r\n\r\n  $render() {}\r\n\r\n  connectedCallback(...arg) {\r\n    super.connectedCallback(...arg);\r\n    const { rTransition, rInitialAnimation } = this.$.DATA;\r\n    this.$$renderNums();\r\n    this.$$rotateX(rInitialAnimation === \"true\");\r\n    this.$$isMonted = true;\r\n  }\r\n\r\n  disconnectedCallback(...arg) {\r\n    super.connectedCallback(...arg);\r\n  }\r\n}\r\n\r\ncustomElements.define(\"r-rolling-text-num\", RRollingTextNum);\r\n\r\nexport class RRollingText extends RainbowElement {\r\n  static observedAttributes = this.$registerProps({\r\n    \"r-value\": String,\r\n    \"r-math-type\": String, // 'floor' , 'none'\r\n  });\r\n\r\n  $$renderNumNodes = renderChildren({\r\n    parentNode: this,\r\n  });\r\n\r\n  $render() {\r\n    let { rValue, rMathType } = this.$.DATA;\r\n\r\n    let rValueStr = String(rValue);\r\n    let values = (() => {\r\n      return arrayLoopMap(rValueStr.length, (index) => {\r\n        const size = Number([1, ...arrayLoopMap(index, () => 0)].join(\"\"));\r\n        if (rMathType === \"floor\") return Math.floor(rValue / size);\r\n        return rValue / size;\r\n      });\r\n    })();\r\n\r\n    this.$$renderNumNodes.renderList(values, {\r\n      keyExtractor: (item, index) => index,\r\n      onCreateNode: (item, index, key) => {\r\n        let node = document.createElement(\"r-rolling-text-num\");\r\n        node.setAttribute(\"key\", key);\r\n        node.value = item;\r\n        return node;\r\n      },\r\n      onCacheNode: (node, item, index, key) => {\r\n        node.value = item;\r\n        node.setAttribute(\"key\", key);\r\n        return node;\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\ncustomElements.define(\"r-rolling-text\", RRollingText);\r\n"],"names":["deleteKey","target","source","bool","key","Object","prototype","hasOwnProperty","call","error","assignStyle","style","newStyle","convertToCamelCase","str","includes","parts","split","slice","map","part","charAt","toUpperCase","join","camelCaseToKebabCase","replace","toLowerCase","RainbowEvent","Event","constructor","type","eventInitDict","event","super","this","detail","Array","undefined","console","warn","createCustomEvent","name","newEvent","CustomEvent","bubbles","cancelable","renderChildren","props","options","parentNode","pointer","cacheMap","Map","renderList","p","config","beforeEach","keyExtractor","item","index","onCacheNode","onCreateNode","forEach","node","has","get","nextSibling","insertBefore","delete","set","remove","events","MutationObserver","mutations","fun","Function","observe","document","subtree","attributes","attributeOldValue","treeAttrsChangeIMP","simult","init","$changePropsRender","disconnected","settle","async","resizeObserverIMP","obs","isOnlyResizeWidth","isOnlyResizeHeight","resizeCallback","resizeOptions","cache","cb","bind","$debouncedRender","ResizeObserver","arg","offset","width","offsetWidth","height","offsetHeight","disconnect","treeObserverIMP","mObserver","rObserver","childrenResizeOptions","onChildrenSizeChange","onSizeChange","onWidthChange","onHeightChange","mutationOptions","childList","onChildChange","onAttributeChange","entries","some","el","mutation","addedNodes","from","filter","removedNodes","ele","unobserve","arrayAt","list","length","arrayLoopMap","num","arr","push","animationDebounced","callback","id","cancelAnimationFrame","requestAnimationFrame","time","at","RainbowElement","HTMLElement","$registerProps","types","keys","default","$types","$props","IMPS","$","isInitAttrs","data","DATA","Proxy","prop","resolveFunCss","calc","v","resolveCss","isAttrFun","test","cssVal","len","Number","replaceAll","window","innerWidth","innerHeight","isFunstr","eval","number","isNaN","log","class","setStyle","fmtStyle","ftStyle","Boolean","reduce","add","value","assign","setClass","fmtClass","newClass","newMap","classList","findParentByType","parent","$elementName","getOffsetTop","top","offsetTop","offsetParent","$onRegisterIMPS","pop","$render","attributeChangedCallback","oldValue","newValue","$onAttributeChanged","changeAttr","connectedCallback","connected","adoptedCallback","adopted","disconnectedCallback","force","isChange","css","getComputedStyle","getPropertyValue","trim","RGrid","static","String","rGap","rRowGap","rColumnGap","$$columns","$$doLayout","rColumns","rMinAutoWidth","Math","floor","rGridWrap","rGridStretch","children","clumnList","getAttribute","start","gridColumns","maxColumn","end","end2","customElements","define","RFalls","col","colGap","rowGap","left","i","itemWidth","child","getMinHeightItem","getMaxHeightItem","RScroll","$$scrollEl","$$prveScrollTop","scrollTop","scrollBy","scrollTo","attachShadow","mode","createElement","className","setAttribute","content","topSlot","contentSlot","bottomSlot","appendChild","shadowRoot","addEventListener","$$onScroll","sEl","moveY","dispatchEvent","onscroll","removeEventListener","RScrollMemoryBubble","$$visible","$$cacheMoveY","$$scrollParent","rInitVisibility","$$setVisibleFalse","$$setVisibleTrue","$$setClass","rOrientation","abs","rVisibleDistance","RRollingTextNum","$$container","$$measure","$$rotes","$$num","$$value","$$isMonted","$$deg","$$rotateX","setValue","ani","innerText","$$renderNums","deg","translateZ","sin","PI","div","transform","isTransition","rTransition","rInitialAnimation","rotateX","unactIndex","round","transition","RRollingText","$$renderNumNodes","rValue","rMathType","values","size"],"mappings":"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"}