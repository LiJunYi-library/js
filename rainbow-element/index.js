!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).rainbowElement={})}(this,(function(t){"use strict";class e extends HTMLElement{static $initProps(t){const e=[],i={};for(const s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e.push(s),t[s]?.default instanceof Function?i[s]=t[s].default(i):i[s]=t[s]?.default);return this.prototype.$props=t,this.prototype.$attrs=i,e}$ASTProps={};$isASTinit=!1;$childrenResizeObserver;$resizeObserver;$mutationObserver;$mutationObserverInit={childList:!0};$cache={offset:{}};$renderEvents=[];constructor(){super(),this.$initResizeObserver(),this.$initMutationObserver(),this.$initChildrenResizeObserver()}$dispatchOn(t,...e){this?.[t]?.(...e),this.$renderEvents.includes(t)&&this.$onRender(t,...e)}$initMutationObserver(){try{this.$mutationObserver=new MutationObserver(this.$mutationObserverCB.bind(this)),this.$mutationObserver.observe(this,this.$mutationObserverInit)}catch(t){console.warn(t)}}$mutationObserverCB(t,...e){this.$dispatchOn("$onMutation",t,...e);for(let e of t)if("childList"===e.type){const t=Array.from(e.addedNodes).filter((t=>t.style)),i=Array.from(e.removedNodes).filter((t=>t.style));t.forEach((t=>this.$childrenResizeObserver.observe(t))),i.forEach((t=>this.$childrenResizeObserver.unobserve(t))),this.$dispatchOn("$onChildChange",e)}else"attributes"===e.type&&this.$dispatchOn("$onAttributeChange",e)}$onRender(){}$onMutation(){}$onChildChange(){}$onAttributeChange(){}$initChildrenResizeObserver(){try{this.$childrenResizeObserver=new ResizeObserver(this.$childrenResizeObserverCB.bind(this))}catch(t){console.warn(t)}}$childrenResizeObserverCB(...t){this.$dispatchOn("$onChildrenResize",...t)}$initResizeObserver(){try{this.$resizeObserver=new ResizeObserver(this.$resizeObserverCB.bind(this)),this.$resizeObserver.observe(this)}catch(t){console.warn(t)}}$resizeObserverCB(...t){this.$dispatchOn("$onResizeObserver",...t);const e=this.$cache.offset,i=this?.getBoundingClientRect?.();e.width===i.width&&e.height===i.height||this.$dispatchOn("$onResize",i,...t),e.width!==i.width&&this.$dispatchOn("$onWidthChange",i,...t),e.height!==i.height&&this.$dispatchOn("$onHeightChange",i,...t),this.$cache.offset=i}$onResize(){}$onWidthChange(){}$onHeightChange(){}$setAttrsProp(t,e){const i=this.$props[t];if(!i)return this.$attrs[t]=e;let s=i.type||i;if(s instanceof Array){let t=s.map((t=>t.name));s=t.includes("String")?String:s[0]}let r="true"===e||"false"!==e&&("null"===e?null:"undefined"!==e?s(e):void 0);this.$attrs[t]=r}$onAttrsChange(){}attributeChangedCallback(t,e,i){!1===this.$isASTinit&&(this.$ASTProps[t]=i),this.$attrs[t]=i,this.$setAttrsProp(t,i),!0===this.$isASTinit&&this.$onAttrsChange(this.$attrs,t,e,i)}connectedCallback(){this.$isASTinit=!0,Array.from(this.children).forEach((t=>this.$childrenResizeObserver.observe(t))),this.$dispatchOn("$onConnected")}adoptedCallback(){this.$dispatchOn("$onAdopted")}disconnectedCallback(){this.$resizeObserver?.disconnect?.(),this.$childrenResizeObserver?.disconnect?.(),this.$mutationObserver?.disconnect?.()}}class i extends e{static observedAttributes=this.$initProps({columns:{type:Number,default:1},gap:[Number,String],"row-gap":[Number,String],"column-gap":[Number,String],inline:Boolean,"min-auto-width":Number,wrap:Boolean,stretch:Boolean,onred:Function});$renderEvents=["$onMutation","$onWidthChange","$onAttrsChange"];get $columns(){return this.$attrs["min-auto-width"]?Math.floor(this.offsetWidth/this.$attrs["min-auto-width"]):this.$attrs.columns}$bindStyle(t){Object.assign(this.style,{display:t.inline?"inline-grid":"grid","grid-template-columns":` repeat(${this.$columns}, 1fr)`,"grid-gap":t.gap+"px","row-gap":(t["row-gap"]||t.gap)+"px","column-gap":(t["column-gap"]||t.gap)+"px"})}$doLayout(){let t=this.$attrs,e=Array.from(this.children),i=e.map((t=>1*t.getAttribute("grid-column")||1)),s=1,r=[],n=this.$columns+1;i.forEach(((e,i)=>{let o=s+e;if(t.wrap){if(o>n){t.stretch&&r[i-1]&&(r[i-1].end=n),s=1;let a=s+e;o=a>n?n:a}}else o>n&&(o=n);r.push({start:s,end:o,index:i}),s+=e,s>this.$columns&&(s=1)})),e.forEach(((t,e)=>{t.classList.add("r-grid-item"),t.style["grid-column-start"]=r[e].start,t.style["grid-column-end"]=r[e].end}))}$onRender(){this.$bindStyle(this.$attrs),this.$doLayout(),this.classList.add("r-grid")}}customElements.define("r-grid",i);class s extends e{static observedAttributes=this.$initProps({position:[Boolean,String],left:[Number,String],right:[Number,String],bottom:[Number,String],top:[Number,String]});$renderEvents=["$onConnected","$onAttrsChange"];$onRender(){let t=this.$attrs;this.classList.add(...["r-absolute",t.position&&"r-absolute-"+t.position].filter(Boolean))}}customElements.define("r-absolute",s),Array.prototype.at||(Array.prototype.at=function(...t){return function(t,e){let i=e<0?t.length+e:e;return t[i]}(this,...t)});class r extends e{static observedAttributes=this.$initProps({"min-auto-width":Number,columns:{type:Number,default:2},gap:{type:Number,default:0},"row-gap":{type:Number,default:0},"column-gap":{type:Number,default:0}});constructor(...t){super(...t)}get $col(){return this.$attrs["min-auto-width"]?Math.floor(this.offsetWidth/this.$attrs["min-auto-width"]):this.$attrs.columns}get $coGap(){return this.$attrs["column-gap"]||this.$attrs.gap}get $roGap(){return this.$attrs["row-gap"]||this.$attrs.gap}get $itemWidth(){return`calc( ${100/this.$col}% - ${(this.$col-1)*this.$coGap/this.$col}px )`}$getLeft(t){return`calc( ${100/this.$col*t}% - ${(this.$col-1)*this.$coGap/this.$col*t}px + ${t*this.$coGap}px )`}$createList(){const t=function(t,e){const i=[];for(let s=0;s<t;s++)i.push(e(s));return i}(this.$col,(t=>({height:0,left:this.$getLeft(t),top:0,index:t})));return t.getMinHeightItem=()=>{let e=t[0];return t.forEach((t=>{t.height<e.height&&(e=t)})),e},t.getMaxHeightItem=()=>{let e=t[0];return t.forEach((t=>{t.height>e.height&&(e=t)})),e},t}$renderEvents=["$onMutation","$onWidthChange","$onChildrenResize","$onAttrsChange"];$onRender(){this.classList.add("r-falls");const t=this.$createList();Array.from(this.children).forEach((e=>{e.classList.add("r-falls-item"),e.style.width=this.$itemWidth;let i=t.getMinHeightItem();i.height&&(i.height=i.height+this.$roGap),e.style.left=i.left,e.style.top=i.height+"px",i.height=i.height+e.offsetHeight})),this.style.height=t.getMaxHeightItem().height+"px"}}customElements.define("r-falls",r);class n extends e{static observedAttributes=this.$initProps({direction:{type:String,default:"row"},inline:Boolean,reverse:Boolean,wrap:Boolean,justify:{type:String,default:""},align:{type:String,default:""},"align-self":{type:String,default:""},auto:{type:[String,Boolean],default:""},fill:{type:[String,Boolean],default:""},gap:{type:[Number,String],default:""},"row-gap":[Number,String],"column-gap":[Number,String]});$renderEvents=["$onConnected","$onAttrsChange"];$onRender(){let t=this.$attrs;this.classList.add(...["r-flex",t.inline&&"r-inline-flex",t.direction&&`r-flex-direction-${t.direction}`,t.reverse&&`r-flex-direction-${t.direction}-reverse`,t.wrap&&"r-flex-wrap",t.justify&&`r-flex-justify-${t.justify}`,t.auto&&`r-flex-justify-auto-${t.auto}`,t.align&&`r-flex-align-${t.align}`,t["align-self"]&&`r-flex-align-self-${t["align-self"]}`,t.fill&&`r-flex-fill-${t.fill}`].filter(Boolean)),Object.assign(this.style,{"grid-gap":t.gap+"px","row-gap":(t["row-gap"]||t.gap)+"px","column-gap":(t["column-gap"]||t.gap)+"px"})}}customElements.define("r-flex",n),t.RAbsolute=s,t.RFalls=r,t.RFlex=n,t.RGrid=i,t.RainbowElement=e}));
//# sourceMappingURL=index.js.map
