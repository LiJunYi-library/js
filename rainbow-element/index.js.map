{"version":3,"file":"index.js","sources":["src/base/rainbow-element.js","src/grid/index.js","src/absolute/index.js","../rainbow-js/package/array/index.js","src/falls/index.js","src/flex/index.js","src/scroll/index.js","src/scroll-memory-bable/index.js"],"sourcesContent":["\r\nfunction deleteKey(target, source, bool) {\r\n    for (const key in target) {\r\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\r\n            try {\r\n                if (bool) source[key] = ''\r\n                delete source[key]\r\n            } catch (error) { }\r\n        }\r\n    }\r\n}\r\n\r\nfunction assignStyle(style, newStyle) {\r\n    for (const key in newStyle) {\r\n        if (Object.prototype.hasOwnProperty.call(newStyle, key)) {\r\n            style[key] = newStyle[key];\r\n            if (style[key] !== newStyle[key]) {\r\n                style[key] = '';\r\n                console.warn(` style ${key} set ${newStyle[key]} 失败 已重置为 ''`);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class RainbowElement extends HTMLElement {\r\n    static $initProps(props) {\r\n        const keys = [];\r\n        const attrs = {};\r\n        for (const key in props) {\r\n            if (Object.prototype.hasOwnProperty.call(props, key)) {\r\n                keys.push(key)\r\n                if (props[key]?.default instanceof Function) attrs[key] = props[key].default(attrs)\r\n                else attrs[key] = props[key]?.default;\r\n\r\n            }\r\n        }\r\n        this.prototype.$props = props\r\n        this.prototype.$attrs = attrs\r\n        return keys\r\n    }\r\n\r\n\r\n    $ASTProps = {};\r\n    $isASTinit = false;\r\n    $childrenResizeObserver;\r\n    $resizeObserver;\r\n    $mutationObserver;\r\n    $mutationObserverInit = { childList: true };\r\n    $cache = { offset: {}, class: new Map(), style: {} };\r\n    $renderEvents = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.$initResizeObserver();\r\n        this.$initMutationObserver();\r\n        this.$initChildrenResizeObserver();\r\n    }\r\n\r\n    $setStyle(fmtStyle = () => ({})) {\r\n        let ftStyle = fmtStyle(this.$attrs) || {};\r\n        let newStyle = ftStyle;\r\n        if (ftStyle instanceof Array) {\r\n            newStyle = ftStyle.filter(Boolean).reduce((add, value) => {\r\n                Object.assign(add, value);\r\n                return add\r\n            }, {})\r\n        }\r\n\r\n        deleteKey(newStyle, this.$cache.style);\r\n        deleteKey(this.$cache.style, this.style, true);\r\n        assignStyle(this.style, newStyle);\r\n        this.$cache.style = newStyle;\r\n    }\r\n\r\n    $setClass(fmtClass = () => []) {\r\n        let newClass = fmtClass(this.$attrs)\r\n        if (newClass?.length === undefined) newClass = [newClass]\r\n        newClass = newClass.filter(Boolean);\r\n        let newMap = new Map();\r\n        newClass.forEach((key) => {\r\n            newMap.set(key, key);\r\n            this.$cache.class.delete(key);\r\n            this.classList.add(key)\r\n        });\r\n        this.$cache.class.forEach((key, v) => {\r\n            this.classList.remove(key)\r\n        })\r\n        this.$cache.class = newMap;\r\n    }\r\n\r\n    $createCustomEvent(name, event, eventInitDict = {},) {\r\n        const newEvent = new CustomEvent(name, { bubbles: true, cancelable: true, ...eventInitDict })\r\n        for (const key in event) {\r\n            try {\r\n                if (newEvent[key] === undefined) newEvent[key] = event[key];\r\n            } catch (error) {\r\n                console.warn(error);\r\n            }\r\n        }\r\n        return newEvent\r\n    }\r\n\r\n    $getParentByType(name, p = this) {\r\n        if (!p) return;\r\n        const parent = p.parentNode;\r\n        if (!parent) return;\r\n        const tName = parent.constructor.name;\r\n        if (tName === name || parent.$elementName === name) return parent;\r\n        return this.$getParentByType(name, parent)\r\n    }\r\n\r\n    $dispatchOn(eName, ...args) {\r\n        this?.[eName]?.(...args)\r\n        if (this.$renderEvents.includes(eName)) this.$onRender(eName, ...args)\r\n    }\r\n\r\n    $initMutationObserver() {\r\n        try {\r\n            this.$mutationObserver = new MutationObserver(this.$mutationObserverCB.bind(this));\r\n            this.$mutationObserver.observe(this, this.$mutationObserverInit)\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n    $mutationObserverCB(mutationsList, ...arg) {\r\n        this.$dispatchOn('$onMutation', mutationsList, ...arg)\r\n        for (let mutation of mutationsList) {\r\n            if (mutation.type === \"childList\") {\r\n                const addedNodes = Array.from(mutation.addedNodes).filter(el => el.style);\r\n                const removedNodes = Array.from(mutation.removedNodes).filter(el => el.style);\r\n                addedNodes.forEach(ele => this.$childrenResizeObserver.observe(ele));\r\n                removedNodes.forEach(ele => this.$childrenResizeObserver.unobserve(ele));\r\n                this.$dispatchOn('$onChildChange', mutation)\r\n            } else if (mutation.type === \"attributes\") {\r\n                this.$dispatchOn('$onAttributeChange', mutation)\r\n            }\r\n        }\r\n    }\r\n    $onRender() { }\r\n    $onMutation() { }\r\n    $onChildChange() { }\r\n    $onAttributeChange() { }\r\n\r\n\r\n    $initChildrenResizeObserver() {\r\n        try {\r\n            this.$childrenResizeObserver = new ResizeObserver(this.$childrenResizeObserverCB.bind(this));\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n    $childrenResizeObserverCB(...arg) {\r\n        this.$dispatchOn('$onChildrenResize', ...arg);\r\n    }\r\n\r\n\r\n    $initResizeObserver() {\r\n        try {\r\n            this.$resizeObserver = new ResizeObserver(this.$resizeObserverCB.bind(this));\r\n            this.$resizeObserver.observe(this)\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n    $resizeObserverCB(...arg) {\r\n        this.$dispatchOn('$onResizeObserver', ...arg);\r\n        const cacheOffset = this.$cache.offset;\r\n        const newOffset = this?.getBoundingClientRect?.();\r\n        if (cacheOffset.width !== newOffset.width || cacheOffset.height !== newOffset.height) this.$dispatchOn('$onResize', newOffset, ...arg)\r\n        if (cacheOffset.width !== newOffset.width) this.$dispatchOn('$onWidthChange', newOffset, ...arg);\r\n        if (cacheOffset.height !== newOffset.height) this.$dispatchOn('$onHeightChange', newOffset, ...arg);\r\n        this.$cache.offset = newOffset;\r\n    }\r\n    $onResize() { }\r\n    $onWidthChange() { }\r\n    $onHeightChange() { }\r\n\r\n\r\n    $setAttrsProp(name, value) {\r\n        const pop = this.$props[name];\r\n        if (!pop) return this.$attrs[name] = value;\r\n        let cto = pop.type || pop;\r\n        if (cto instanceof Array) {\r\n            let t = cto.map(el => el.name);\r\n            if (t.includes('String')) cto = String\r\n            else cto = cto[0];\r\n        }\r\n        let newV = (() => {\r\n            if (value === 'true') return true;\r\n            if (value === 'false') return false;\r\n            if (value === 'null') return null;\r\n            if (value === 'undefined') return undefined;\r\n            return cto(value);\r\n        })()\r\n        this.$attrs[name] = newV;\r\n    }\r\n    $onAttrsChange() { }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (this.$isASTinit === false) this.$ASTProps[name] = newValue;\r\n        this.$attrs[name] = newValue;\r\n        this.$setAttrsProp(name, newValue)\r\n        if (this.$isASTinit === true) this.$dispatchOn('$onAttrsChange', this.$attrs, name, oldValue, newValue)\r\n    }\r\n\r\n\r\n    $onConnected() { }\r\n    connectedCallback() {\r\n        this.$isASTinit = true;\r\n        Array.from(this.children).forEach(child => this.$childrenResizeObserver.observe(child));\r\n        this.$dispatchOn('$onConnected')\r\n        // console.log('自定义元素添加至页面。', this.offsetWidth);\r\n    }\r\n\r\n\r\n    $onAdopted() { }\r\n    adoptedCallback() {\r\n        this.$dispatchOn('$onAdopted')\r\n        // console.log(\"自定义元素移动至新页面。\");\r\n    }\r\n\r\n\r\n    $onDisconnected() { }\r\n    disconnectedCallback() {\r\n        // console.log(\"自定义元素从页面中移除。\");\r\n        this.$resizeObserver?.disconnect?.();\r\n        this.$childrenResizeObserver?.disconnect?.();\r\n        this.$mutationObserver?.disconnect?.();\r\n        this.$dispatchOn('$onDisconnected')\r\n    }\r\n\r\n}","import { RainbowElement } from '../base/index.js'\r\nimport './index.css'\r\n\r\nexport class RGrid extends RainbowElement {\r\n    static observedAttributes = this.$initProps({\r\n        columns: { type: Number, default: 1 },\r\n        gap: [Number, String],\r\n        'row-gap': [Number, String],\r\n        'column-gap': [Number, String],\r\n        inline: Boolean,\r\n        'min-auto-width': Number,\r\n        wrap: Boolean,\r\n        stretch: Boolean,\r\n        onred: Function\r\n    });\r\n\r\n    $renderEvents = ['$onMutation', '$onWidthChange', '$onAttrsChange']\r\n\r\n    get $columns() {\r\n        if (this.$attrs['min-auto-width']) return Math.floor(this.offsetWidth / this.$attrs['min-auto-width']);\r\n        return this.$attrs.columns\r\n    };\r\n\r\n    $doLayout() {\r\n        let props = this.$attrs;\r\n        let children = Array.from(this.children)\r\n        let clumnList = children.map(el => el.getAttribute('grid-column') * 1 || 1)\r\n        let start = 1;\r\n        let gridColumns = [];\r\n        let maxColumn = this.$columns + 1;\r\n        clumnList.forEach((num, index) => {\r\n            let end = start + num;\r\n            if (props.wrap) {\r\n                if (end > maxColumn) {\r\n                    if (props.stretch) {\r\n                        if (gridColumns[index - 1]) gridColumns[index - 1].end = maxColumn;\r\n                    }\r\n                    start = 1;\r\n                    let end2 = start + num\r\n                    end = end2 > maxColumn ? maxColumn : end2;\r\n                }\r\n            } else {\r\n                if (end > maxColumn) end = maxColumn\r\n            }\r\n            gridColumns.push({\r\n                start: start,\r\n                end: end,\r\n                index\r\n            })\r\n            start = start + num\r\n            if (start > this.$columns) start = 1\r\n        });\r\n        children.forEach((el, index) => {\r\n            el.classList.add('r-grid-item')\r\n            el.style['grid-column-start'] = gridColumns[index].start\r\n            el.style['grid-column-end'] = gridColumns[index].end\r\n        });\r\n    }\r\n\r\n    $onRender() {\r\n        this.$setClass(() => ['r-grid']);\r\n        this.$setStyle((props) => ({\r\n            \"display\": props.inline ? \"inline-grid\" : \"grid\",\r\n            \"grid-template-columns\": ` repeat(${this.$columns}, 1fr)`,\r\n            \"grid-gap\": props.gap + \"px\",\r\n            \"row-gap\": (props['row-gap'] || props.gap) + \"px\",\r\n            \"column-gap\": (props['column-gap'] || props.gap) + \"px\",\r\n        }))\r\n        this.$doLayout();\r\n    }\r\n\r\n}\r\n\r\ncustomElements.define(\"r-grid\", RGrid);","import { RainbowElement } from '../base/index.js'\r\nimport './index.css'\r\n\r\nexport class RAbsolute extends RainbowElement {\r\n    static observedAttributes = this.$initProps({\r\n        position: [Boolean, String],\r\n        left: [Number, String],\r\n        right: [Number, String],\r\n        bottom: [Number, String],\r\n        top: [Number, String],\r\n    });\r\n\r\n    $CacheClass;\r\n\r\n    $renderEvents = ['$onConnected', '$onAttrsChange']\r\n\r\n    $onRender() {\r\n        this.$setClass((props)=>[\r\n            \"r-absolute\",\r\n            props.position && 'r-absolute-' + props.position,\r\n        ])\r\n    }\r\n\r\n}\r\n\r\ncustomElements.define(\"r-absolute\", RAbsolute);","const testArr = [\n  // { num: 33, tt: \"奇\" },\n  // { num: 44, tt: \"偶\" },\n  // { num: 11, tt: \"奇***\" },\n  // { num: 99, tt: \"奇***\" },\n  // { num: 22, tt: \"偶\" },\n  // { num: 77, tt: \"奇\" },\n  // { num: 88, tt: \"偶\" },\n  // { num: 99, tt: \"奇----\" },\n  // { num: 55, tt: \"奇\" },\n  // { num: 11, tt: \"奇----\" },\n  // { num: 66, tt: \"偶\" },\n\n  { num: 11, tt: \"奇\" },\n  { num: 22, tt: \"偶\" },\n  { num: 33, tt: \"奇***\" },\n  { num: 44, tt: \"偶***\" },\n  { num: 55, tt: \"奇\" },\n  { num: 66, tt: \"偶\" },\n  { num: 77, tt: \"奇\" },\n  { num: 88, tt: \"偶----\" },\n  { num: 99, tt: \"奇\" },\n];\n\nexport * from \"./sql.js\";\n\nif (!Array.prototype.at) {\n  Array.prototype.at = function (...arg) {\n    return arrayAt(this, ...arg);\n  };\n}\n\nexport function arrayAt(list, index) {\n  let nth = index < 0 ? list.length + index : index;\n  return list[nth];\n}\n\n//循环\nexport function arrayLoop(num, cb) {\n  for (let index = 0; index < num; index++) {\n    if (cb(index) === false) return;\n  }\n}\n//循环创建\nexport function arrayLoopMap(num, cb) {\n  const arr = [];\n  for (let index = 0; index < num; index++) {\n    arr.push(cb(index));\n  }\n  return arr;\n}\n//冒泡查找\nexport function arrayBubble(list = [], formatter, verdict) {\n  let value = null;\n  let index;\n  let item;\n  list.forEach((ele, nth) => {\n    if (value === null) {\n      item = ele;\n      index = nth;\n      value = formatter(ele, nth, list);\n      return;\n    }\n\n    if (verdict(value, ele, nth, list)) {\n      item = ele;\n      index = nth;\n      value = formatter(ele, nth, list);\n    }\n  });\n  return item;\n}\n//冒泡查找最小\nexport function arrayBubbleMin(list = [], formatter) {\n  return arrayBubble(\n    list,\n    formatter,\n    (value, item, index, list) => formatter(item, index, list) < value\n  );\n}\n//冒泡倒数查找最小\nexport function arrayBubbleLastMin(list = [], formatter) {\n  return arrayBubble(\n    list,\n    formatter,\n    (value, item, index, list) => formatter(item, index, list) <= value\n  );\n}\n//冒泡查找最大\nexport function arrayBubbleMax(list = [], formatter) {\n  return arrayBubble(\n    list,\n    formatter,\n    (value, item, index, list) => formatter(item, index, list) > value\n  );\n}\n//冒泡倒数查找最大\nexport function arrayBubbleLastMax(list = [], formatter) {\n  return arrayBubble(\n    list,\n    formatter,\n    (value, item, index, list) => formatter(item, index, list) >= value\n  );\n}\n// 删除数组中的第n个 改变数组\nexport function arrayRemoveIndex(list = [], num) {\n  list.splice(num, 1);\n  return list;\n}\n// 删除数组中第一个找到的item 不改变数组\nexport function arrayRemove(list = [], item) {\n  const index = list.findIndex((el) => el === item);\n  if (~index) list.splice(index, 1);\n  return list;\n}\n// 删除数组中最后一个找到的item  不改变数组\nexport function arrayRemoveLast(list = [], item) {\n  const index = list.findLastIndex((el) => el === item);\n  if (~index) list.splice(index, 1);\n  return list;\n}\n// 删除数组中的所有 相同的 item 改变数组\nexport function arrayRemoves(list = [], item) {\n  const sames = list.filter((el) => el === item);\n  sames.forEach((el) => {\n    arrayRemove(list, el);\n  });\n  return list;\n}\n// 切割数组的index\nexport function arraySplitIndex(list = [], num) {\n  const arr = [];\n  for (let index = 0; index < list.length; index += num) {\n    const ar = [];\n    const max = index + num > list.length ? list.length : index + num;\n    for (let j = index; j < max; j++) {\n      ar.push(j);\n    }\n    arr.push(ar);\n  }\n  return arr;\n}\n// 切割数组\nexport function arraySplit(list = [], num) {\n  const arr = [];\n  for (let index = 0; index < list.length; index += num) {\n    const max = index + num > list.length ? list.length : index + num;\n    const ar = list.slice(index, max);\n    arr.push(ar);\n  }\n  return arr;\n}\n// 数组 根据某个属性 去重\nexport function arrayWipeRepetition(list = [], formatter) {\n  if (!formatter) return [...new Set(list)];\n  const map = new Map();\n  return list.filter(\n    (item, index) =>\n      !map.has(formatter(item, index).toString()) &&\n      map.set(formatter(item, index).toString())\n  );\n}\n// 数组 根据某个属性 去重 从后面\nexport function arrayWipeRepetitionLast(list = [], formatter) {\n  if (!formatter) return [...new Set(list)];\n  const map = {};\n  list.forEach((item, index) => (map[formatter(item, index)] = item));\n  const arr = [];\n  for (const key in map) {\n    if (Object.hasOwnProperty.call(map, key)) {\n      const element = map[key];\n      arr.push(element);\n    }\n  }\n  return arr;\n}\n// 数组提取相同\nexport function arrayExtractSame(list = [], formatter) {\n  const map = {};\n  list.forEach((item) => {\n    if (!map[formatter(item)]) map[formatter(item)] = [];\n    map[formatter(item)].push(item);\n  });\n  const arr = [];\n  for (const key in map) {\n    if (Object.hasOwnProperty.call(map, key)) {\n      const element = map[key];\n      if (element.length > 1) arr.push(element);\n    }\n  }\n  return arr.flat();\n}\n\n// 数组排序 根据属性正序\nexport function arraySort(list = [], formatter, formatter2) {\n  let fmt = formatter2 || formatter\n  list.sort((a, b) => formatter(a) - fmt(b))\n  return list;\n}\n\nexport function arraySortMin(...arg) {\n  return arraySort(...arg)[0]\n}\n\nexport function arraySortMax(list = [], ...arg) {\n  return arraySort(list, ...arg)[list.length - 1]\n}\n\n// 数组排序  根据属性倒序\nexport function arrayReverseSort(list = [], formatter, formatter2) {\n  let fmt = formatter2 || formatter\n  list.sort((a, b) => fmt(b) - formatter(a))\n  return list;\n}\n\nexport function arrayReverseSortMin(...arg) {\n  return arrayReverseSort(...arg)[list.length - 1]\n}\n\nexport function arrayReverseSortMax(list = [], ...arg) {\n  return arrayReverseSort(list, ...arg)[0]\n}\n\n/**\n * 数组排序 根据另一个数组的属性\n * @param {*} list\n * @param {*} arr\n * @param {*} formatter\n * @returns\n */\nexport function arraySortByList(list, arr, formatter) {\n  list.forEach((item) => {\n    const sortIndex = arr.findIndex((ele) => formatter(item, ele));\n    item.sortIndex = sortIndex === -1 ? list.length : sortIndex;\n  });\n  list.sort(function (a, b) {\n    return a.sortIndex - b.sortIndex;\n  });\n  return list;\n}\n// 数组打乱\nexport function arrayRandom(list) {\n  const length = list.length;\n  for (let nth = 0; nth < length; nth++) {\n    const index = Math.floor(Math.random() * (list.length - 1));\n    list.push(list[index]);\n    list.splice(index, 1);\n  }\n}\n// 触发数组方法\nexport function arrayInvokeFuns(...args) {\n  const [list, formatter, ...arg] = args;\n  let funArgs = [formatter, ...arg];\n  let fmt = (item) => item;\n  if (formatter instanceof Function) {\n    fmt = formatter;\n    funArgs = [...arg];\n  }\n  list.forEach((item) => {\n    const fun = fmt(item);\n    fun(...funArgs);\n  });\n}\n/* 事件派发 */\nexport function arrayEvents() {\n  const events = [];\n\n  function push(eventCB) {\n    events.push(eventCB);\n  }\n\n  function remove(eventCB) {\n    arrayRemove(events, eventCB);\n  }\n\n  function invoke(...args) {\n    arrayInvokeFuns(events, ...args);\n  }\n\n  function invokes(fun) {\n    events.forEach(fun);\n  }\n\n  return { events, push, remove, invoke, invokes };\n}\n\n/* 二分查找 */\nexport function arrayBinarySearch(setPointer = (args, index) => (args.right = index - 1), arr = [], formatter, compare) {\n  const fg = {\n    left: 0,\n    right: arr.length - 1,\n    result: -1,\n  }\n  while (fg.left <= fg.right) {\n    const index = Math.floor((fg.left + fg.right) / 2);\n    const item = arr[index]\n    if (formatter(item)) {\n      fg.result = index;\n      setPointer(fg, index, item)\n    } else if (compare(item)) {\n      fg.left = index + 1;\n    } else {\n      fg.right = index - 1;\n    }\n  }\n  return fg.result;\n}\n/* 二分查找到符合条件的第一个元素的下标 没有找到返回-1 compare<*/\nexport function arrayBinaryFindIndex(arr = [], formatter, compare) {\n  return arrayBinarySearch((args, index) => {\n    args.right = index - 1\n  }, arr, formatter, compare);\n}\n/* 二分查找到符合条件的第一个元素 没有找到返回undefined compare<*/\nexport function arrayBinaryFind(arr = [], formatter, compare) {\n  const index = arrayBinaryFindIndex(arr, formatter, compare);\n  return index === -1 ? undefined : arr[index]\n}\n/* 二分查找到符合条件的最后一个元素的下标 没有找到返回-1 compare<*/\nexport function arrayBinaryFindLastIndex(arr = [], formatter, compare) {\n  return arrayBinarySearch((args, index) => {\n    args.left = index + 1;\n  }, arr, formatter, compare);\n}\n/* 二分查找到符合条件的最后一个元素 没有找到返回undefined compare<*/\nexport function arrayBinaryFindLast(arr = [], formatter, compare) {\n  const index = arrayBinaryFindLastIndex(arr, formatter, compare);\n  return index === -1 ? undefined : arr[index]\n}\n\n\n\n","import { RainbowElement } from '../base/index.js'\r\nimport { arrayLoopMap } from '@rainbow_ljy/rainbow-js'\r\nimport './index.css'\r\n\r\n\r\nexport class RFalls extends RainbowElement {\r\n    static observedAttributes = this.$initProps({\r\n        'min-auto-width': Number,\r\n        'columns': { type: Number, default: 2 },\r\n        'gap': { type: Number, default: 0 },\r\n        'row-gap': { type: Number, default: 0 },\r\n        'column-gap': { type: Number, default: 0 },\r\n    });\r\n\r\n    constructor(...arg) {\r\n        super(...arg)\r\n    }\r\n\r\n\r\n    get $col() {\r\n        if (this.$attrs['min-auto-width']) return Math.floor(this.offsetWidth / this.$attrs['min-auto-width']);\r\n        return this.$attrs.columns\r\n    };\r\n\r\n    get $coGap() {\r\n        return (this.$attrs['column-gap'] || this.$attrs.gap)\r\n    }\r\n\r\n    get $roGap() {\r\n        return (this.$attrs['row-gap'] || this.$attrs.gap)\r\n    }\r\n\r\n    get $itemWidth() {\r\n        return `calc( ${100 / this.$col}% - ${((this.$col - 1) * this.$coGap) / this.$col}px )`;\r\n    }\r\n\r\n    $getLeft(i) {\r\n        return `calc( ${(100 / this.$col) * i}% - ${(((this.$col - 1) * this.$coGap) / this.$col) * i}px + ${i * this.$coGap}px )`;\r\n    }\r\n\r\n    $createList() {\r\n        const list = arrayLoopMap(this.$col, (i) => ({ height: 0, left: this.$getLeft(i), top: 0, index: i }));\r\n        list.getMinHeightItem = () => {\r\n            let item = list[0];\r\n            list.forEach((el) => { if (el.height < item.height) item = el });\r\n            return item;\r\n        }\r\n        list.getMaxHeightItem = () => {\r\n            let item = list[0];\r\n            list.forEach((el) => { if (el.height > item.height) item = el });\r\n            return item;\r\n        }\r\n        return list\r\n    }\r\n\r\n    $renderEvents = ['$onMutation', '$onWidthChange', '$onChildrenResize', '$onAttrsChange']\r\n\r\n    $onRender() {\r\n        this.$setClass(() => [\"r-falls\"])\r\n        const list = this.$createList();\r\n\r\n        Array.from(this.children).forEach(child => {\r\n            child.classList.add('r-falls-item');\r\n            child.style.width = this.$itemWidth;\r\n            let node = list.getMinHeightItem();\r\n            if (node.height) node.height = node.height + this.$roGap;\r\n            child.style.left = node.left;\r\n            child.style.top = node.height + 'px';\r\n            node.height = node.height + child.offsetHeight;\r\n        });\r\n\r\n        this.style.height = list.getMaxHeightItem().height + 'px'\r\n\r\n    }\r\n\r\n}\r\n\r\ncustomElements.define(\"r-falls\", RFalls);","import { RainbowElement } from '../base/index.js'\r\nimport './index.css'\r\n\r\nexport class RFlex extends RainbowElement {\r\n    static observedAttributes = this.$initProps({\r\n        direction: { type: String, default: \"row\" },\r\n        inline: Boolean,\r\n        reverse: Boolean,\r\n        wrap: Boolean,\r\n        justify: { type: String, default: \"\" },\r\n        align: { type: String, default: \"\" },\r\n        'align-self': { type: String, default: \"\" },\r\n        auto: { type: [String, Boolean], default: \"\" },\r\n        fill: { type: [String, Boolean], default: \"\" },\r\n        gap: { type: [Number, String], default: \"\" },\r\n        'row-gap': [Number, String],\r\n        'column-gap': [Number, String],\r\n    });\r\n\r\n    $renderEvents = ['$onConnected', '$onAttrsChange']\r\n\r\n    $onRender() {\r\n        this.$setClass((props) => [\r\n            \"r-flex\",\r\n            props.inline && \"r-inline-flex\",\r\n            props.direction && `r-flex-direction-${props.direction}`,\r\n            props.reverse && `r-flex-direction-${props.direction}-reverse`,\r\n            props.wrap && \"r-flex-wrap\",\r\n            props.justify && `r-flex-justify-${props.justify}`,\r\n            props.auto && `r-flex-justify-auto-${props.auto}`,\r\n            props.align && `r-flex-align-${props.align}`,\r\n            props['align-self'] && `r-flex-align-self-${props['align-self']}`,\r\n            props.fill && `r-flex-fill-${props.fill}`,\r\n        ])\r\n        this.$setStyle((props) => ({\r\n            \"grid-gap\": props.gap + \"px\",\r\n            \"row-gap\": (props['row-gap'] || props.gap) + \"px\",\r\n            \"column-gap\": (props['column-gap'] || props.gap) + \"px\",\r\n        }))\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\ncustomElements.define(\"r-flex\", RFlex);","import './index.css';\r\nimport { RainbowElement } from '../base/index.js'\r\n\r\nexport class RScroll extends RainbowElement {\r\n    $elementName = 'RScroll'\r\n    $scrollEl;\r\n\r\n    constructor(...arg) {\r\n        super(...arg);\r\n        this.attachShadow({ mode: 'open' });\r\n\r\n        this.$scrollEl = document.createElement('div');\r\n        this.$scrollEl.className = 'r-scroll-element';\r\n        this.$scrollEl.setAttribute('part', 'r-scroll-element  sdt');\r\n\r\n        const content = document.createElement('div');\r\n        content.className = 'r-scroll-content';\r\n        content.setAttribute('part', 'r-scroll-content  sdt');\r\n\r\n        const topSlot = document.createElement('slot');\r\n        topSlot.setAttribute('name', 'top');\r\n        topSlot.className = 'top';\r\n        const contentSlot = document.createElement('slot');\r\n        contentSlot.className = 'content';\r\n        const bottomSlot = document.createElement('slot');\r\n        bottomSlot.setAttribute('name', 'bottom');\r\n        bottomSlot.className = 'bottom';\r\n\r\n        this.shadowRoot.appendChild(this.$scrollEl);\r\n        content.appendChild(contentSlot);\r\n        this.$scrollEl.appendChild(topSlot);\r\n        this.$scrollEl.appendChild(content);\r\n        this.$scrollEl.appendChild(bottomSlot);\r\n     \r\n\r\n        this.$scrollEl.addEventListener('scroll', this.$onScroll.bind(this));\r\n    }\r\n\r\n    $onScroll(event) {\r\n        const sEl = this.$scrollEl;\r\n        event.scrollTop = sEl.scrollTop;\r\n        event.moveY = sEl.$prveScrollTop - sEl.scrollTop;\r\n        if (event.moveY < 0) this.dispatchEvent(this.$createCustomEvent('scrollUp', event));\r\n        if (this.onscroll) this.onscroll(event)\r\n        this.dispatchEvent(this.$createCustomEvent('scroll', event))\r\n        if (event.moveY > 0) this.dispatchEvent(this.$createCustomEvent('scrollDown', event));\r\n        sEl.$prveScrollTop = sEl.scrollTop;\r\n    }\r\n\r\n    $onConnected() {\r\n        this.$scrollEl.$prveScrollTop = this.$scrollEl.scrollTop\r\n        this.classList.add('r-scroll')\r\n    }\r\n\r\n    $onDisconnected() {\r\n        this.$scrollEl.removeEventListener('scroll', this.$onScroll.bind(this));\r\n    }\r\n}\r\n\r\ncustomElements.define('r-scroll', RScroll);","import './index.css';\r\nimport { RainbowElement } from '../base/index.js'\r\n\r\nexport class RScrollMemoryBubble extends RainbowElement {\r\n    static observedAttributes = this.$initProps({\r\n        top: String,\r\n        left: String,\r\n        right: String,\r\n        bottom: String,\r\n        position: { type: String, default: \"right\" },\r\n        visible: { type: Boolean, default: true },\r\n        'visible-distance': { type: Number, default: 100 },\r\n        'visible-reversal': Boolean\r\n    });\r\n\r\n    $visible = true;\r\n    $cacheMoveY = 0;\r\n    $scrollParent;\r\n    $renderEvents = ['$onConnected', '$onAttrsChange'];\r\n\r\n    $onRender() {\r\n        this.$bindStyle();\r\n        this.$bindClass();\r\n    }\r\n\r\n    $bindClass() {\r\n        this.$setClass((props) => [\r\n            \"r-scroll-memory-bubble\",\r\n            \"r-scroll-memory-bubble-\" + props.position,\r\n            this.$visible ? `r-scroll-memory-bubble-visible` : `r-scroll-memory-bubble-hide`,\r\n            this.$visible ? `r-scroll-memory-bubble-visible-${props.position}` : `r-scroll-memory-bubble-hide-${props.position}`,\r\n        ])\r\n    }\r\n\r\n    $bindStyle() {\r\n        this.$setStyle((props) => ({ top: props.top, right: props.right, bottom: props.bottom, left: props.left }))\r\n    }\r\n\r\n    $onConnected() {\r\n        this.$visible = this.$attrs.visible;\r\n        this.$scrollParent = this.$getParentByType('RScroll')\r\n        this.$scrollParent.addEventListener('scrollUp', this.$setVisibleFalse.bind(this))\r\n        this.$scrollParent.addEventListener('scrollDown', this.$setVisibleTrue.bind(this))\r\n    }\r\n\r\n    $onDisconnected() {\r\n        this.$scrollParent.removeEventListener('scrollUp', this.$setVisibleFalse.bind(this));\r\n        this.$scrollParent.removeEventListener('scrollDown', this.$setVisibleTrue.bind(this));\r\n    }\r\n\r\n    $setVisibleTrue(event) {\r\n        console.log('----scrollUp scrollDown---');\r\n        \r\n        if (this.$visible === true) return this.$cacheMoveY = 0;\r\n        this.$cacheMoveY = this.$cacheMoveY + Math.abs(event.moveY);\r\n        if (this.$cacheMoveY >= this.$attrs['visible-distance']) {\r\n            this.$cacheMoveY = 0;\r\n            this.$visible = true;\r\n            this.$bindClass();\r\n        }\r\n    }\r\n\r\n    $setVisibleFalse(event) {\r\n        console.log('----scrollUp scrollDown---');\r\n        if (this.$visible === false) return this.$cacheMoveY = 0;\r\n        this.$cacheMoveY = this.$cacheMoveY + Math.abs(event.moveY);\r\n        if (this.$cacheMoveY >= this.$attrs['visible-distance']) {\r\n            this.$cacheMoveY = 0;\r\n            this.$visible = false;\r\n            this.$bindClass();\r\n        }\r\n    }\r\n}\r\n\r\ncustomElements.define('r-scroll-memory-bable', RScrollMemoryBubble);"],"names":["deleteKey","target","source","bool","key","Object","prototype","hasOwnProperty","call","error","RainbowElement","HTMLElement","$initProps","props","keys","attrs","push","default","Function","this","$props","$attrs","$ASTProps","$isASTinit","$childrenResizeObserver","$resizeObserver","$mutationObserver","$mutationObserverInit","childList","$cache","offset","class","Map","style","$renderEvents","constructor","super","$initResizeObserver","$initMutationObserver","$initChildrenResizeObserver","$setStyle","fmtStyle","ftStyle","newStyle","Array","filter","Boolean","reduce","add","value","assign","console","warn","assignStyle","$setClass","fmtClass","newClass","undefined","length","newMap","forEach","set","delete","classList","v","remove","$createCustomEvent","name","event","eventInitDict","newEvent","CustomEvent","bubbles","cancelable","$getParentByType","p","parent","parentNode","$elementName","$dispatchOn","eName","args","includes","$onRender","MutationObserver","$mutationObserverCB","bind","observe","mutationsList","arg","mutation","type","addedNodes","from","el","removedNodes","ele","unobserve","$onMutation","$onChildChange","$onAttributeChange","ResizeObserver","$childrenResizeObserverCB","$resizeObserverCB","cacheOffset","newOffset","getBoundingClientRect","width","height","$onResize","$onWidthChange","$onHeightChange","$setAttrsProp","pop","cto","t","map","String","newV","$onAttrsChange","attributeChangedCallback","oldValue","newValue","$onConnected","connectedCallback","children","child","$onAdopted","adoptedCallback","$onDisconnected","disconnectedCallback","disconnect","RGrid","static","columns","Number","gap","inline","wrap","stretch","onred","$columns","Math","floor","offsetWidth","$doLayout","clumnList","getAttribute","start","gridColumns","maxColumn","num","index","end","end2","display","customElements","define","RAbsolute","position","left","right","bottom","top","$CacheClass","at","list","nth","arrayAt","RFalls","$col","$coGap","$roGap","$itemWidth","$getLeft","i","$createList","cb","arr","arrayLoopMap","getMinHeightItem","item","getMaxHeightItem","node","offsetHeight","RFlex","direction","reverse","justify","align","auto","fill","RScroll","$scrollEl","attachShadow","mode","document","createElement","className","setAttribute","content","topSlot","contentSlot","bottomSlot","shadowRoot","appendChild","addEventListener","$onScroll","sEl","scrollTop","moveY","$prveScrollTop","dispatchEvent","onscroll","removeEventListener","RScrollMemoryBubble","visible","$visible","$cacheMoveY","$scrollParent","$bindStyle","$bindClass","$setVisibleFalse","$setVisibleTrue","log","abs"],"mappings":"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"}