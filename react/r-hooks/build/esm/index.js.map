{"version":3,"file":"index.js","sources":["../../src/utils/index.js","../../src/fetch/index.js","../../src/list/list/index.js","../../src/list/load/index.js","../../src/list/multiple/index.js","../../src/list/pagination/index.js","../../src/list/radio/index.js","../../src/list/select/index.js","../../src/promise/index.js"],"sourcesContent":["import { useState, useMemo, useRef } from \"react\";\n\nexport function ref(state) {\n  const [, dispatch] = useState(state);\n  const cacheRef = useRef(state);\n  return useMemo(() => {\n    return {\n      __v_isRef: true,\n      set value(val) {\n        cacheRef.current = val;\n        dispatch(val);\n      },\n      get value() {\n        return cacheRef.current;\n      },\n      toRef(value) {\n        cacheRef.current = value;\n        return {\n          __v_isRef: true,\n          set value(val) {\n            cacheRef.current = val;\n            dispatch(val);\n          },\n          get value() {\n            return cacheRef.current;\n          },\n        };\n      },\n    };\n  }, []);\n}\n\nexport function useMemoRef() {\n  const [, dispatch] = useState();\n  const cacheRef = useRef();\n  return useMemo(() => {\n    return {\n      get value() {\n        return cacheRef.current;\n      },\n      toRef(value) {\n        cacheRef.current = value;\n        return {\n          __v_isRef: true,\n          set value(val) {\n            cacheRef.current = val;\n            dispatch(val);\n          },\n          get value() {\n            return cacheRef.current;\n          },\n        };\n      },\n    };\n  }, []);\n}\n\nexport function useOneceMemo(cb) {\n  return useMemo(cb, []);\n}\n\nexport function renderSlot(slots, name, props, defNode) {\n  const vNode = slots?.[name];\n  if (vNode instanceof Function) return vNode(props);\n  if (vNode) return vNode;\n  if (defNode instanceof Function) return defNode(props);\n  return defNode;\n}\n","import { fetchHOC } from \"@rainbow_ljy/rainbow-js\";\nimport { useMemo } from \"react\";\nimport { useMemoRef } from \"../utils\";\n\nexport function useFetchHOC(props = {}) {\n  return function useFetch(config = {}) {\n    const loading = useMemoRef();\n    const begin = useMemoRef();\n    const error = useMemoRef();\n    const data = useMemoRef();\n    const errorData = useMemoRef();\n    return useMemo(() => {\n      const hooks = fetchHOC(props)({\n        loadingRef: loading.toRef,\n        beginRef: begin.toRef,\n        errorRef: error.toRef,\n        dataRef: data.toRef,\n        errorDataRef: errorData.toRef,\n        ...config,\n      });\n      return hooks;\n    }, []);\n  };\n}\n","import { list } from \"@rainbow_ljy/rainbow-js\";\nimport { useMemoRef, useOneceMemo } from \"../../utils\";\n\nexport function useList(props = {}) {\n  const currentPage = useMemoRef();\n  const pageSize = useMemoRef();\n  const total = useMemoRef();\n  const listData = useMemoRef();\n  const filterFun = useMemoRef();\n  const sortFun = useMemoRef();\n  const manageListFun = useMemoRef();\n  const select = useMemoRef();\n  const value = useMemoRef();\n  const label = useMemoRef();\n  const index = useMemoRef();\n  const listArr = useMemoRef();\n\n  return useOneceMemo(() =>\n    list({\n      currentPageRef: currentPage.toRef,\n      pageSizeRef: pageSize.toRef,\n      totalRef: total.toRef,\n      listDataRef: listData.toRef,\n      filterFunRef: filterFun.toRef,\n      sortFunRef: sortFun.toRef,\n      manageListFunRef: manageListFun.toRef,\n      selectRef: select.toRef,\n      valueRef: value.toRef,\n      labelRef: label.toRef,\n      indexRef: index.toRef,\n      listRef: listArr.toRef,\n      ...props,\n    }),\n  );\n}\n","import { listLoad } from \"@rainbow_ljy/rainbow-js\";\nimport { useMemoRef, useOneceMemo } from \"../../utils\";\n\nexport function useListLoad(props) {\n  const select = useMemoRef();\n  const value = useMemoRef();\n  const label = useMemoRef();\n  const index = useMemoRef();\n  const list = useMemoRef();\n\n  const begin = useMemoRef();\n  const finished = useMemoRef();\n  const empty = useMemoRef();\n  const total = useMemoRef();\n  const currentPage = useMemoRef();\n  const pageSize = useMemoRef();\n\n  return useOneceMemo(() =>\n    listLoad({\n      selectRef: select.toRef,\n      valueRef: value.toRef,\n      labelRef: label.toRef,\n      indexRef: index.toRef,\n      listRef: list.toRef,\n\n      beginRef: begin.toRef,\n      finishedRef: finished.toRef,\n      emptyRef: empty.toRef,\n      totalRef: total.toRef,\n      currentPageRef: currentPage.toRef,\n      pageSizeRef: pageSize.toRef,\n      ...props,\n    }),\n  );\n}\n","import { listMultiple } from \"@rainbow_ljy/rainbow-js\";\nimport { useMemoRef, useOneceMemo } from \"../../utils\";\n\nexport function useListMultiple(props = {}) {\n  const select = useMemoRef();\n  const value = useMemoRef();\n  const label = useMemoRef();\n  const index = useMemoRef();\n  const list = useMemoRef();\n\n  return useOneceMemo(() =>\n    listMultiple({\n      selectRef: select.toRef,\n      valueRef: value.toRef,\n      labelRef: label.toRef,\n      indexRef: index.toRef,\n      listRef: list.toRef,\n      ...props,\n    }),\n  );\n}\n","import { listPagination } from \"@rainbow_ljy/rainbow-js\";\nimport { useMemoRef, useOneceMemo } from \"../../utils\";\n\nexport function useListPagination(props = {}) {\n  const select = useMemoRef();\n  const value = useMemoRef();\n  const label = useMemoRef();\n  const index = useMemoRef();\n  const list = useMemoRef();\n  const empty = useMemoRef();\n  const total = useMemoRef();\n  const currentPage = useMemoRef();\n  const pageSize = useMemoRef();\n\n  return useOneceMemo(() =>\n    listPagination({\n      selectRef: select.toRef,\n      valueRef: value.toRef,\n      labelRef: label.toRef,\n      indexRef: index.toRef,\n      listRef: list.toRef,\n      emptyRef: empty.toRef,\n      totalRef: total.toRef,\n      currentPageRef: currentPage.toRef,\n      pageSizeRef: pageSize.toRef,\n      ...props,\n    }),\n  );\n}\n","import { listRadio } from \"@rainbow_ljy/rainbow-js\";\nimport { useMemoRef, useOneceMemo } from \"../../utils\";\n\nexport function useListRadio(props = {}) {\n  const select = useMemoRef();\n  const value = useMemoRef();\n  const label = useMemoRef();\n  const index = useMemoRef();\n  const list = useMemoRef();\n\n  return useOneceMemo(() =>\n    listRadio({\n      selectRef: select.toRef,\n      valueRef: value.toRef,\n      labelRef: label.toRef,\n      indexRef: index.toRef,\n      listRef: list.toRef,\n      ...props,\n    }),\n  );\n}\n","import { useListRadio } from \"../radio/index\";\nimport { useListMultiple } from \"../multiple/index\";\n\nexport function useListSelect(props = {}) {\n  if (props.isMultiple) return useListMultiple(props);\n  return useListRadio(props);\n}\n","import { promiseAbortController } from \"@rainbow_ljy/rainbow-js\";\nimport { useMemoRef, useOneceMemo } from \"../utils\";\n\nexport function usePromise(fn, props = {}) {\n  const loading = useMemoRef();\n  const begin = useMemoRef();\n  const error = useMemoRef();\n  const data = useMemoRef();\n  const errorData = useMemoRef();\n\n  return useOneceMemo(() =>\n    promiseAbortController(fn, {\n      loadingRef: loading.toRef,\n      beginRef: begin.toRef,\n      errorRef: error.toRef,\n      dataRef: data.toRef,\n      errorDataRef: errorData.toRef,\n      ...props,\n    }),\n  );\n}\n"],"names":["ref","state","dispatch","useState","cacheRef","useRef","useMemo","val","value","useMemoRef","useOneceMemo","cb","renderSlot","slots","name","props","defNode","vNode","useFetchHOC","config","loading","begin","error","data","errorData","fetchHOC","useList","currentPage","pageSize","total","listData","filterFun","sortFun","manageListFun","select","label","index","listArr","list","useListLoad","finished","empty","listLoad","useListMultiple","listMultiple","useListPagination","listPagination","useListRadio","listRadio","useListSelect","usePromise","fn","promiseAbortController"],"mappings":"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"}